<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数学建模——优化（规划）问题</title>
      <link href="/2020/08/08/shu-xue-gui-hua/"/>
      <url>/2020/08/08/shu-xue-gui-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h1><p>在一组线性约束条件的限制下，求一线性目标函数最大或最小的问题。</p><h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><ul><li><strong>比例性</strong></li><li><strong>可加性</strong></li><li><strong>连续性</strong></li></ul><p>比例性和可加性保证目标函数和约束条件对于决策变量的线性性，连续性则允许得到决策变量的实数最优解。</p><h2 id="标准模型"><a href="#标准模型" class="headerlink" title="标准模型"></a>标准模型</h2><p>$$<br>\max\quad z=\sum_{j=1}^n{c_jx_j}\<br>s.t.\quad \begin{cases}<br>\sum_{j=1}^{n}{a_{ij}x_j}=b_i\quad i=1,2,…,m\<br>x_j\ge0\quad j=1,2,…,n<br>\end{cases}<br>$$</p><h2 id="scipy库——scipy-optimize-linprog"><a href="#scipy库——scipy-optimize-linprog" class="headerlink" title="scipy库——scipy.optimize.linprog"></a>scipy库——scipy.optimize.linprog</h2><h3 id="模型形式"><a href="#模型形式" class="headerlink" title="模型形式"></a>模型形式</h3><p>$$<br>\min_{x}{c^{T}x}\<br>s.t.\begin{cases}<br>A_{ub}x\le b_{ub},\<br>A_{eq}x=b_{eq}\<br>l\le x\le u,<br>\end{cases}<br>$$</p><ul><li>x：决策变量的向量</li><li>$c,b_{ub},b_{eq},l,u$：向量</li><li>$A_{ub},A_{eq}$：矩阵</li></ul><p>##　使用</p><pre class="line-numbers language-python"><code class="language-python">scipy<span class="token punctuation">.</span>optimize<span class="token punctuation">.</span>linprog<span class="token punctuation">(</span>    c<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 一维向量，要最小化的线性目标函数的系数</span>    A_ub<span class="token operator">=</span>None<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 不等式约束矩阵，每一行指定x上线性不等式约束的系数</span>    b_ub<span class="token operator">=</span>None<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 不等式约束向量，每一个元素代表一个对应的值的上限</span>    A_eq<span class="token operator">=</span>None<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 等式约束矩阵，每一行指定x上线性等式约束的系数</span>    b_eq<span class="token operator">=</span>None<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 等式约束向量，A_eq@x的每个元素必须等于b_eq的相应元素</span>    bounds<span class="token operator">=</span>None<span class="token punctuation">,</span> <span class="token comment" spellcheck="true"># sequence，x中每个元素的（min，max）对序列，定义该决策变量的最小值和最大值。</span>                <span class="token comment" spellcheck="true"># 默认情况下，边界是（0，None）（所有决策变量都是非负的）。                </span>    method<span class="token operator">=</span><span class="token string">'interior-point'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 用于解决标准格式问题的算法，</span>                              <span class="token comment" spellcheck="true"># &amp;#123;‘interior-point’, ‘revised simplex’, ‘simplex’&amp;#125;</span>    callback<span class="token operator">=</span>None<span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 如果提供了回调函数，则每次算法迭代将至少调用一次回调函数 </span>    options<span class="token operator">=</span>None<span class="token punctuation">,</span>         x0<span class="token operator">=</span>None     <span class="token comment" spellcheck="true"># 决策变量的猜测值，通过优化算法对其进行优化。</span><span class="token punctuation">)</span>            <span class="token comment" spellcheck="true"># method='revised simplex'，并且只有当x0代表一个基本的可行解时才能使用</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="method"><a href="#method" class="headerlink" title="method"></a>method</h3><ul><li><p><strong>interior-point method——内点法</strong></p><p>从初始内点出发，沿着最速下降方向，通过可行域内部直接达到最优解，由于是在可行域内部寻优，故对于大规模线性规划问题，当约束条件和变量数目增加时，内点算法的迭代次数变化较少，收敛性和计算速度均优于单纯形法。</p></li><li><p><strong>revised simplex method——修正单纯形法</strong></p><p>基本步骤和单纯形法大致相同，主要区别是在逐次迭代中不再以高斯消去法为基础，而是由旧基阵的逆去直接计算新基阵的逆，再由此确定检验数。这样做可以减少迭代中的累积误差，提高计算精度，同时也减少了在计算机上的存储量。</p></li><li><p><strong>simplex method——单纯形法</strong></p><p>先找出可行域的一个顶点，据一定规则判断其是否最优；若否，则转换到与之相邻的另一顶点，并使目标函数值更优；如此下去，直到找到某最优解为止。寻优步数随着决策变量的增加呈指数增长（最差情况下，具有指数复杂度）。</p></li></ul><h3 id="返回值——res"><a href="#返回值——res" class="headerlink" title="返回值——res"></a>返回值——res</h3><p>A <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.OptimizeResult.html#scipy.optimize.OptimizeResult"><code>scipy.optimize.OptimizeResult</code></a> consisting of the fields:</p><blockquote><p><strong>x： 1-D array</strong></p><p>在满足约束条件下使目标函数<strong>最小化</strong>的决策变量的值。</p><p><strong>fun： float</strong></p><p>目标函数的最优值。</p><p><strong>slack： 1-D array</strong></p><p>松弛变量（&gt;0）, <code>b_ub - A_ub @ x</code>.</p><p><strong>con1-D： array</strong></p><p>等式约束的（=0）残差, <code>b_eq - A_eq @ x</code>.</p><p><strong>success： bool</strong></p><p><code>True</code> when the algorithm succeeds in finding an optimal solution.</p><p><strong>status： int</strong></p><p>An integer representing the exit status of the algorithm.</p><p><code>0</code> : 优化成功终止.</p><p><code>1</code> : 达到迭代上限.</p><p><code>2</code> : 问题似乎不可行.</p><p><code>3</code> : 问题似乎没有边界.</p><p><code>4</code> : 遇到数字困难.</p><p><strong>nit： int</strong></p><p>在所有阶段中执行的迭代总数。</p><p><strong>message： str</strong></p><p>算法退出状态的字符串</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>考虑一个简单的线性规划问题：<br>$$<br>\begin{split}\max_{x_1, x_2, x_3, x_4} \ &amp; 29x_1 + 45x_2 \ \mbox{such that} \ &amp; x_1 -x_2 -3x_3 \leq 5\ &amp; 2x_1 -3x_2 -7x_3 + 3x_4 \geq 10\ &amp; 2x_1 + 8x_2 + x_3 = 60\ &amp; 4x_1 + 4x_2 + x_4 = 60\ &amp; 0 \leq x_0\ &amp; 0 \leq x_1 \leq 5\ &amp; x_2 \leq 0.5\ &amp; -3 \leq x_3\\end{split}<br>$$<br>首先，让我们考虑目标函数。我们希望最大化目标函数，但<code>linprog</code>只能接受最小化问题。通过将最大化转换为很容易解决 29x1+45x2 最小化$ −29x_1−45x_2$，$x_3,x_4$在目标函数中未显示。这意味着$x_3,x_4$权重为零。因此，目标函数可以转换为：<br>$$<br>\min_{x_1,x_2,x_3,x_4}{-29x_1-45x_2+0x_3+0x_4}<br>$$<br>如果我们定义决策变量的向量 $x=[x_1,x_2,x_3,x_4]^T$，目标权重向量 c在这个问题应该是：<br>$$<br>c=[-29,-45,0,0]^T<br>$$<br>接下来，让我们考虑两个不平等约束。第一个是“小于”不等式，因此它已经处于被<code>linprog</code>接受的形式。第二个是“大于”不等式，因此我们需要将双方乘以−1将其转化为“小于”不平等，同时明确显示零系数，得到：<br>$$<br>x_1-x_2-3x_3+0x_4\le 5\<br>-2x_1+3x_2+7x_3-3x_4\le-10<br>$$<br>将以上方程式转换为矩阵形式：<br>$$<br>A_{ub}x\le b_{ub}\<br>A_{ub}=\begin{bmatrix}<br>1&amp;-1&amp;-3&amp;0\<br>-2&amp;3&amp;7&amp;-3<br>\end{bmatrix}\<br>b_{ub}=\begin{bmatrix}<br>5\-10<br>\end{bmatrix}<br>$$<br>接下来考虑两个相等约束，同时明确显示零权重，得到：<br>$$<br>2x_1+8x_2+1x_3+0x_4=60\<br>4x_1+4x_2+0x_3+1x_4=60<br>$$<br>转换为矩阵形式，得到：<br>$$<br>A_{eq}x=b_{eq}\<br>A_{eq}=\begin{bmatrix}<br>2&amp;8&amp;1&amp;0\<br>4&amp;4&amp;0&amp;1<br>\end{bmatrix}\<br>b_{eq}=\begin{bmatrix}<br>60\60<br>\end{bmatrix}<br>$$<br>最后，让我们考虑对各个决策变量的单独不等式约束，这些约束称为“框约束”或“简单边界”。可以使用的bounds参数应用这些约束。bounds的默认值为<code>(0, None)</code>，这意味着每个决策变量的下限为0，而每个决策变量的上限为无穷大：所有决策变量均为非负数。我们的界限是不同的，因此我们需要将每个决策变量的下限和上限指定为元组，并将这些元组分组到一个列表中。</p><p><strong>实现代码：</strong></p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> scipy<span class="token punctuation">.</span>optimize <span class="token keyword">import</span> linprogc <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">29.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">45.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>A_ub <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token number">7.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b_ub <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>A_eq <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">8.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">4.0</span><span class="token punctuation">,</span> <span class="token number">4.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b_eq <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">60.0</span><span class="token punctuation">,</span> <span class="token number">60.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>x0_bounds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> None<span class="token punctuation">)</span>x1_bounds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">)</span>x2_bounds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>np<span class="token punctuation">.</span>inf<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># +/- np.inf can be used instead of None</span>x3_bounds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">,</span> None<span class="token punctuation">)</span>bounds <span class="token operator">=</span> <span class="token punctuation">[</span>x0_bounds<span class="token punctuation">,</span> x1_bounds<span class="token punctuation">,</span> x2_bounds<span class="token punctuation">,</span> x3_bounds<span class="token punctuation">]</span>result <span class="token operator">=</span> linprog<span class="token punctuation">(</span>c<span class="token punctuation">,</span> A_ub<span class="token operator">=</span>A_ub<span class="token punctuation">,</span> b_ub<span class="token operator">=</span>b_ub<span class="token punctuation">,</span> A_eq<span class="token operator">=</span>A_eq<span class="token punctuation">,</span> b_eq<span class="token operator">=</span>b_eq<span class="token punctuation">,</span> bounds<span class="token operator">=</span>bounds<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果：</strong></p><pre class="line-numbers language-python"><code class="language-python">    con<span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">15.5361242</span> <span class="token punctuation">,</span> <span class="token number">16.61288005</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># may vary</span>    fun<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">370.2321976308326</span>  <span class="token comment" spellcheck="true"># may vary </span>message<span class="token punctuation">:</span> <span class="token string">'The algorithm terminated successfully and determined that the problem is infeasible.'</span>    nit<span class="token punctuation">:</span> <span class="token number">6</span>  <span class="token comment" spellcheck="true"># may vary</span>  slack<span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">0.79314989</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.76308532</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># may vary</span> status<span class="token punctuation">:</span> <span class="token number">2</span> success<span class="token punctuation">:</span> <span class="token boolean">False</span>      x<span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">6.60059391</span><span class="token punctuation">,</span>  <span class="token number">3.97366609</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.52664076</span><span class="token punctuation">,</span>  <span class="token number">1.09007993</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># may vary</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>结果表明我们的问题是<strong>不可行</strong>的，这意味着没有满足所有约束的解向量。这并不一定意味着我们做错了任何事。有些问题确实是不可行的。但是，假设我们要决定对$x_1$太紧了，尝试松动到 $0≤x_1≤6$。调整我们的代码以反映更改并再次执行之后：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> scipy<span class="token punctuation">.</span>optimize <span class="token keyword">import</span> linprogc <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">29.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">45.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>A_ub <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token number">7.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b_ub <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">10.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>A_eq <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">8.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">4.0</span><span class="token punctuation">,</span> <span class="token number">4.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>b_eq <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">60.0</span><span class="token punctuation">,</span> <span class="token number">60.0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>x0_bounds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> None<span class="token punctuation">)</span>x1_bounds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 修改</span>x2_bounds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>np<span class="token punctuation">.</span>inf<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># +/- np.inf can be used instead of None</span>x3_bounds <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3.0</span><span class="token punctuation">,</span> None<span class="token punctuation">)</span>bounds <span class="token operator">=</span> <span class="token punctuation">[</span>x0_bounds<span class="token punctuation">,</span> x1_bounds<span class="token punctuation">,</span> x2_bounds<span class="token punctuation">,</span> x3_bounds<span class="token punctuation">]</span>result <span class="token operator">=</span> linprog<span class="token punctuation">(</span>c<span class="token punctuation">,</span> A_ub<span class="token operator">=</span>A_ub<span class="token punctuation">,</span> b_ub<span class="token operator">=</span>b_ub<span class="token punctuation">,</span> A_eq<span class="token operator">=</span>A_eq<span class="token punctuation">,</span> b_eq<span class="token operator">=</span>b_eq<span class="token punctuation">,</span> bounds<span class="token operator">=</span>bounds<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到结果：</p><pre class="line-numbers language-python"><code class="language-python">    con<span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">9.78840831e-09</span><span class="token punctuation">,</span> <span class="token number">1.04662945e-08</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># may vary</span>    fun<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">505.97435889013434</span>  <span class="token comment" spellcheck="true"># may vary</span>message<span class="token punctuation">:</span> <span class="token string">'Optimization terminated successfully.'</span>    nit<span class="token punctuation">:</span> <span class="token number">4</span>  <span class="token comment" spellcheck="true"># may vary</span>  slack<span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">6.52747190e-10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2.26730279e-09</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># may vary</span> status<span class="token punctuation">:</span> <span class="token number">0</span>success<span class="token punctuation">:</span> <span class="token boolean">True</span>      x<span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">9.41025641</span><span class="token punctuation">,</span>  <span class="token number">5.17948718</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.25641026</span><span class="token punctuation">,</span>  <span class="token number">1.64102564</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># may vary</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以检查目标值：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>result<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>c @ x<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">505.97435889013434</span>  <span class="token comment" spellcheck="true"># may vary</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>我们还可以检查所有约束是否都在合理的公差范围内：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>b_ub <span class="token operator">-</span> <span class="token punctuation">(</span>A_ub @ x<span class="token punctuation">)</span><span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># this is equivalent to result.slack</span><span class="token punctuation">[</span> <span class="token number">6.52747190e-10</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2.26730279e-09</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># may vary</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>b_eq <span class="token operator">-</span> <span class="token punctuation">(</span>A_eq @ x<span class="token punctuation">)</span><span class="token punctuation">.</span>flatten<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># this is equivalent to result.con</span><span class="token punctuation">[</span> <span class="token number">9.78840831e-09</span><span class="token punctuation">,</span> <span class="token number">1.04662945e-08</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment" spellcheck="true"># may vary</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">&lt;=</span> result<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> result<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">6.0</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.0</span> <span class="token operator">&lt;=</span> result<span class="token punctuation">.</span>x<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果我们需要更高的精度（通常以速度为代价），则可以使用以下方法求解：<code>revised simplex</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>    con<span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0.00000000e+00</span><span class="token punctuation">,</span> <span class="token number">7.10542736e-15</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># may vary</span>    fun<span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">505.97435897435895</span>    <span class="token comment" spellcheck="true"># may vary</span>message<span class="token punctuation">:</span> <span class="token string">'Optimization terminated successfully.'</span>    nit<span class="token punctuation">:</span> <span class="token number">5</span>  <span class="token comment" spellcheck="true"># may vary</span>  slack<span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">1.77635684e-15</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3.55271368e-15</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># may vary</span> status<span class="token punctuation">:</span> <span class="token number">0</span>success<span class="token punctuation">:</span> <span class="token boolean">True</span>      x<span class="token punctuation">:</span> array<span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token number">9.41025641</span><span class="token punctuation">,</span>  <span class="token number">5.17948718</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.25641026</span><span class="token punctuation">,</span>  <span class="token number">1.64102564</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true"># may vary</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="非线性规划"><a href="#非线性规划" class="headerlink" title="非线性规划"></a>非线性规划</h1><h2 id="scipy-optimize-minimize"><a href="#scipy-optimize-minimize" class="headerlink" title="scipy.optimize.minimize"></a>scipy.optimize.minimize</h2><p>用于无约束和有约束的最小化算法</p><pre class="line-numbers language-python"><code class="language-python">scipy<span class="token punctuation">.</span>optimize<span class="token punctuation">.</span>minimize<span class="token punctuation">(</span>    fun<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 需要最小化的目标函数</span>    x0<span class="token punctuation">,</span>     <span class="token comment" spellcheck="true"># 初步猜测</span>    args<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     method<span class="token operator">=</span>None<span class="token punctuation">,</span>     jac<span class="token operator">=</span>None<span class="token punctuation">,</span>     hess<span class="token operator">=</span>None<span class="token punctuation">,</span>     hessp<span class="token operator">=</span>None<span class="token punctuation">,</span>     bounds<span class="token operator">=</span>None<span class="token punctuation">,</span>     constraints<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>     tol<span class="token operator">=</span>None<span class="token punctuation">,</span>     callback<span class="token operator">=</span>None<span class="token punctuation">,</span>     options<span class="token operator">=</span>None<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>Parameters:</strong></p><ul><li><p><strong>fun</strong>    <em>callable</em></p><p> 需要最小化的目标函数<code>fun(x, *args) -&gt; float</code></p><ul><li><code>x</code>是形状为（n，）的一维数组</li><li><code>args</code> 是完全指定函数所需的固定参数的元组</li></ul></li><li><p><strong>x0</strong>    <em>ndarray, shape (n,)</em></p><p>初步猜测，大小为（n，）的实数元素的数组</p></li><li><p><strong>args    可选</strong>    <em>tuple</em></p><p>额外的参数传递给目标函数及其派生类（<em>fun</em>，<em>jac</em>和<em>hess</em>函数）</p></li><li><p><strong>method    可选</strong>    <em>str or callable</em></p><p>求解器类型。具体参照之后有约束和无约束情况。</p><p>如果没有给出，选择为之一<code>BFGS</code>，<code>L-BFGS-B</code>，<code>SLSQP</code>，取决于如果问题有约束或边界。</p></li><li><p><strong>jac    可选</strong>    <em>{callable, ‘2-point’, ‘3-point’, ‘cs’, bool}</em></p><p>梯度矢量的计算方法。仅适用于CG，BFGS，Newton-CG，L-BFGS-B，TNC，SLSQP，dogleg，trust-ncg，trust-krylov，trust-exact和trust-constr。</p><p>如果它是可调用的，则应该是一个返回梯度向量的函数：<code>jac(x, *args) -&gt; array_like, shape (n,)</code></p></li><li><p><strong>hess    可选</strong>    <em>{callable, ‘2-point’, ‘3-point’, ‘cs’, HessianUpdateStrategy}</em></p><p>计算黑塞矩阵的方法。仅适用于Newton-CG，dogleg，trust-ncg，trust-krylov，trust-exact和trust-constr。</p><p>如果可以调用，则应返回黑塞矩阵：<code>hess(x, *args) -&gt; {LinearOperator, spmatrix, array}, (n, n)</code></p></li><li><p><strong>hessp    可选</strong>    <em>callable</em></p><p>目标函数的黑塞矩阵乘以任意向量p。仅适用于Newton-CG，trust-ncg，trust-krylov，trust-constr。</p><p><em>hessp</em>或<em>hess只需要给予一个。如果提供了</em>hess<em>，那么</em>hessp*将被忽略。 </p><p><em>hessp</em>必须计算黑塞矩阵乘以一个向量：<code>hessp(x, p, *args) -&gt; ndarray shape (n,)</code></p></li><li><p><strong>bounds    可选</strong>    <em>sequence or <code>Bounds</code></em></p><p>L-BFGS-B，TNC，SLSQP，Powell和trust-constr方法的变量界限。有两种方法可以指定范围：</p><ul><li><code> Bounds class</code>的一个实例</li><li><em>x中</em>每个元素的<code>(min, max)</code>序列，<code>None</code>用于指定无边界。</li></ul></li><li><p><strong>constrains    可选</strong>     <em>{Constraint, dict} or List of {Constraint, dict}</em></p><p>约束定义（仅适用于COBYLA，SLSQP和trust-constr）。“ trust-constr”的约束定义为单个对象或指定优化问题约束的对象列表。可用的约束是：</p><ul><li><code>LinearConstraint</code>，线性约束</li><li><code>NonlinearConstraint</code>，非线性约束</li></ul></li><li><p><strong>tol    可选</strong>    <em>float</em></p><p>终止公差。要进行详细控制，请使用特定于求解器的选项。</p></li><li><p><strong>options    可选</strong>    <em>dict</em></p><p>求解器选项字典。所有方法都接受以下通用选项：</p><ul><li><code>maxiter</code>：要执行的最大迭代次数。根据方法的不同，每个迭代可能会使用多个函数评估。</li><li><code>disp</code>：设置为<code>True</code>以打印收敛消息。</li></ul></li><li><p><strong>callback    可选</strong>    <em>callable</em></p><p>在每次迭代后调用。</p></li></ul><p><strong>Return:</strong></p><ul><li><strong>res</strong>    <em>OptimizeResult</em></li></ul></blockquote><h2 id="无约束"><a href="#无约束" class="headerlink" title="无约束"></a>无约束</h2><p>无约束优化问题形式如下：<br>$$<br>\text{minimize}\quad f(\bold{x})\<br>\text{subject to}\quad \bold{x}\in\Omega<br>$$</p><ul><li><p><strong>Nelder-Mead 单纯形法（<code>method='Nelder-Mead'</code>）</strong></p><p>单纯形算法可能是最小化行为良好的函数的最简单方法。它仅需要功能评估，对于简单的最小化问题是一个不错的选择。但是，由于它不使用任何梯度评估，因此可能需要更长的时间才能找到最小值。</p></li><li><p><strong>鲍威尔算法（<code>method='Powell'</code>）</strong></p><p>利用共轭方向可以加快收敛速度的性质形成的一种搜索方法。该方法不需要对目标函数进行求导，当目标函数的导数不连续的时候也能应用，因此，鲍威尔算法是一种十分有效的直接搜索法。</p><p>Powell法可用于求解一般无约束优化问题，对于维数n&lt;20的目标函数求优化问题，此法可获得较满意的结果。</p></li><li><p><strong>BFGS算法（<code>method='BFGS'</code>）</strong></p><p>为了更快地收敛到解，该例程使用目标函数的梯度。如果用户未给出梯度，则使用一阶差进行估算。BFGS方法通常需要比单纯形算法更少的函数调用，即使必须估计梯度也是如此。</p></li><li><p><strong>共轭梯度算法（<code>method='CG'</code>）</strong></p><p>共轭梯度法是一个典型的共轭方向法，它的每一个搜索方向是互相共轭的，而这些搜索方向d仅仅是负梯度方向与上一次迭代的搜索方向的组合，因此，存储量少，计算方便。</p></li><li><p><strong>牛顿共轭梯度算法（<code>method='Newton-CG'</code>）</strong></p><p>牛顿共轭梯度算法是牛顿方法的一种改进方法，它使用共轭梯度算法来（近似）反转局部黑塞矩阵。</p></li><li><p><strong>L-BFGS-B算法（<code>method='L-BFGS-B'</code>）</strong></p><p>L-BFGS-B是用于受限约束优化的有限内存拟牛顿算法，适用于任何类型的带有线搜索的非线性（或线性）问题。另外，对于L-BFGS-B和共轭梯度求解器，收敛所需的迭代次数几乎相同。</p></li><li><p><strong>牛顿截断法（<code>method='TNC'</code>）</strong></p><p>阶段牛顿法旨在优化具有大量自变量的非线性函数。</p></li><li><p><strong>信任区域牛顿共轭梯度算法（<code>method='trust-ncg'</code>）</strong></p><p>该方法是线搜索方法：它找到使函数的二次逼近最小的搜索方向，然后使用线搜索算法在该方向上找到（几乎）最佳步长。</p></li><li><p><strong>信任区域截断的广义Lanczos /共轭梯度算法（<code>method='trust-krylov'</code>）</strong></p><p>该方法是一种适用于大规模问题的方法，因为它仅通过矩阵向量积将hessian用作线性算子。</p></li></ul><h2 id="有约束"><a href="#有约束" class="headerlink" title="有约束"></a>有约束</h2><p>有约束优化问题标准化形式如下：<br>$$<br>\begin{align}<br>\text{minimize}\quad &amp;f(\bold{x})\<br>\text{subject to}\quad &amp;\bold{h(x)=0}\<br>&amp;\bold{g(x)\le 0}<br>\end{align}<br>$$</p><ul><li><p><strong>线性逼近约束优化（<code>method='COBYLA'</code>）</strong></p><p>通过迭代逼近实际约束优化问题和线性规划问题来工作。在迭代过程中，解决了近似线性规划问题，以获得最佳解的候选者。使用原始目标和约束函数评估候选解决方案，从而在优化空间中产生一个新的数据点。此信息用于改进算法的下一次迭代所用的近似线性规划问题。当解决方案无法再改进时，步长将减小，从而完善了搜索范围。当步长变得足够小时，算法结束。</p></li><li><p><strong>递推最小二乘算法（<code>method='SLSQP'</code>）</strong></p><p>SLSQP方法用于目标函数和约束两次连续可微的数学问题。SQP方法解决了一系列优化子问题，每个子问题都会根据约束的线性化来优化目标的二次模型。</p></li><li><p><strong>信任区域算法（<code>method='trust-constr'</code>）</strong></p><p>在数学优化中，信任区域算法是使用模型函数（通常是二次函数）近似的目标函数区域的子集。如果在信任区域内找到了目标函数的适当模型，则该区域将扩展；否则，该区域将被扩展。相反，如果近似值不佳，则该区域将缩小。通过比较模型近似的预期改进与目标函数中观察到的实际改进的比率来评估拟合。</p></li><li><p><strong>狗腿信任区域算法（<code>method='dogleg'</code>）</strong></p><p>对朴素信任区域算法进行改进。</p></li><li><p><strong>牛顿共轭梯度信任区算法（<code>method='trust-ncg'</code>）</strong></p></li><li><p><strong>近似精确信任区域算法（<code>method='trust-exact'</code>）</strong></p></li><li><p><strong>改进近似精确信任区域算法（<code>method='trust-krylov'</code>）</strong></p><p>使用仅需要矩阵向量乘积与黑塞矩阵的近似精确信任区域算法。</p></li></ul><h1 id="多目标规划"><a href="#多目标规划" class="headerlink" title="多目标规划"></a>多目标规划</h1><p>多目标优化问题可表示为：<br>$$<br>\text{minimize}\quad \bold{f(x)}=\begin{bmatrix}<br>f_1(x_1,x_2,…,x_n)\<br>f_2(x_1,x_2,…,x_n)\<br>…\<br>f_l(x_1,x_2,…,x_n)<br>\end{bmatrix}\<br>\text{subject to}\quad x\in\Omega<br>$$<br>通常情况下，求解多目标优化问题需要在多个目标之间寻找合适的折中。简而言之，在多目标优化问题中，综合考虑所有的目标函数，对于某个解，在可行集内没有其他解能够对目标进行改进，那么这个解就是最优解。</p><p>习惯将多目标优化问题的最优解称为帕累托极小点（帕累托解）。帕累托极小点（最优解）的集合称为帕累托前沿。</p><h2 id="多目标进化算法"><a href="#多目标进化算法" class="headerlink" title="多目标进化算法"></a>多目标进化算法</h2><p>使用<code>geatpy</code>实现：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># MyProblem.py</span><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> geatpy <span class="token keyword">as</span> ea<span class="token triple-quoted-string string">"""该案例展示了一个离散决策变量的最小化目标的双目标优化问题。min f1 = -25 * (x1 - 2)**2 - (x2 - 2)**2 - (x3 - 1)**2 - (x4 - 4)**2 - (x5 - 1)**2min f2 = (x1 - 1)**2 + (x2 - 1)**2 + (x3 - 1)**2 + (x4 - 1)**2 + (x5 - 1)**2s.t.x1 + x2 >= 2x1 + x2 &lt;= 6x1 - x2 >= -2x1 - 3*x2 &lt;= 24 - (x3 - 3)**2 - x4 >= 0(x5 - 3)**2 + x4 - 4 >= 0x1,x2,x3,x4,x5 ∈ &amp;#123;0,1,2,3,4,5,6,7,8,9,10&amp;#125;"""</span><span class="token keyword">class</span> <span class="token class-name">MyProblem</span><span class="token punctuation">(</span>ea<span class="token punctuation">.</span>Problem<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 继承Problem父类</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> M <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> <span class="token string">'MyProblem'</span> <span class="token comment" spellcheck="true"># 初始化name（函数名称，可以随意设置）</span>        Dim <span class="token operator">=</span> <span class="token number">5</span> <span class="token comment" spellcheck="true"># 初始化Dim（决策变量维数）</span>        maxormins <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> M <span class="token comment" spellcheck="true"># 初始化maxormins（目标最小最大化标记列表，1：最小化该目标；-1：最大化该目标）</span>        varTypes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> Dim <span class="token comment" spellcheck="true"># 初始化varTypes（决策变量的类型，0：实数；1：整数）</span>        lb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> Dim <span class="token comment" spellcheck="true"># 决策变量下界</span>        ub <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> Dim <span class="token comment" spellcheck="true"># 决策变量上界</span>        lbin <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> Dim <span class="token comment" spellcheck="true"># 决策变量下边界（0表示不包含该变量的下边界，1表示包含）</span>        ubin <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> Dim <span class="token comment" spellcheck="true"># 决策变量上边界（0表示不包含该变量的上边界，1表示包含）</span>        <span class="token comment" spellcheck="true"># 调用父类构造方法完成实例化</span>        ea<span class="token punctuation">.</span>Problem<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> M<span class="token punctuation">,</span> maxormins<span class="token punctuation">,</span> Dim<span class="token punctuation">,</span> varTypes<span class="token punctuation">,</span> lb<span class="token punctuation">,</span> ub<span class="token punctuation">,</span> lbin<span class="token punctuation">,</span> ubin<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">aimFunc</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> pop<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 目标函数</span>        Vars <span class="token operator">=</span> pop<span class="token punctuation">.</span>Phen <span class="token comment" spellcheck="true"># 得到决策变量矩阵</span>        x1 <span class="token operator">=</span> Vars<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        x2 <span class="token operator">=</span> Vars<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        x3 <span class="token operator">=</span> Vars<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        x4 <span class="token operator">=</span> Vars<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        x5 <span class="token operator">=</span> Vars<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        f1 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">25</span> <span class="token operator">*</span> <span class="token punctuation">(</span>x1 <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token punctuation">(</span>x2 <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token punctuation">(</span>x3 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token punctuation">(</span>x4 <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> <span class="token punctuation">(</span>x5 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span>        f2 <span class="token operator">=</span> <span class="token punctuation">(</span>x1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>x2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>x3 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>x4 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>x5 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token comment" spellcheck="true">#        # 利用罚函数法处理约束条件</span><span class="token comment" spellcheck="true">#        idx1 = np.where(x1 + x2 &lt; 2)[0]</span><span class="token comment" spellcheck="true">#        idx2 = np.where(x1 + x2 > 6)[0]</span><span class="token comment" spellcheck="true">#        idx3 = np.where(x1 - x2 &lt; -2)[0]</span><span class="token comment" spellcheck="true">#        idx4 = np.where(x1 - 3*x2 > 2)[0]</span><span class="token comment" spellcheck="true">#        idx5 = np.where(4 - (x3 - 3)**2 - x4 &lt; 0)[0]</span><span class="token comment" spellcheck="true">#        idx6 = np.where((x5 - 3)**2 + x4 - 4 &lt; 0)[0]</span><span class="token comment" spellcheck="true">#        exIdx = np.unique(np.hstack([idx1, idx2, idx3, idx4, idx5, idx6])) # 得到非可行解的下标</span><span class="token comment" spellcheck="true">#        f1[exIdx] = f1[exIdx] + np.max(f1) - np.min(f1)</span><span class="token comment" spellcheck="true">#        f2[exIdx] = f2[exIdx] + np.max(f2) - np.min(f2)</span>        <span class="token comment" spellcheck="true"># 利用可行性法则处理约束条件</span>        pop<span class="token punctuation">.</span>CV <span class="token operator">=</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">-</span> x1 <span class="token operator">-</span> x2<span class="token punctuation">,</span>                            x1 <span class="token operator">+</span> x2 <span class="token operator">-</span> <span class="token number">6</span><span class="token punctuation">,</span>                            <span class="token operator">-</span><span class="token number">2</span> <span class="token operator">-</span> x1 <span class="token operator">+</span> x2<span class="token punctuation">,</span>                            x1 <span class="token operator">-</span> <span class="token number">3</span><span class="token operator">*</span>x2 <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span>                            <span class="token punctuation">(</span>x3 <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">+</span> x4 <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">,</span>                            <span class="token number">4</span> <span class="token operator">-</span> <span class="token punctuation">(</span>x5 <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span> <span class="token operator">-</span> x4<span class="token punctuation">]</span><span class="token punctuation">)</span>        pop<span class="token punctuation">.</span>ObjV <span class="token operator">=</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span><span class="token punctuation">[</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 把求得的目标函数值赋值给种群pop的ObjV</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># main.py</span><span class="token keyword">import</span> geatpy <span class="token keyword">as</span> ea     <span class="token comment" spellcheck="true"># import geatpy</span><span class="token keyword">from</span> MyProblem <span class="token keyword">import</span> MyProblem    <span class="token comment" spellcheck="true"># 导入自定义问题接口</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""================================实例化问题对象==========================="""</span>    problem <span class="token operator">=</span> MyProblem<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment" spellcheck="true"># 生成问题对象</span>    <span class="token triple-quoted-string string">"""==================================种群设置==============================="""</span>    Encoding <span class="token operator">=</span> <span class="token string">'BG'</span>             <span class="token comment" spellcheck="true"># 编码方式</span>    NIND <span class="token operator">=</span> <span class="token number">50</span>                   <span class="token comment" spellcheck="true"># 种群规模</span>    Field <span class="token operator">=</span> ea<span class="token punctuation">.</span>crtfld<span class="token punctuation">(</span>Encoding<span class="token punctuation">,</span> problem<span class="token punctuation">.</span>varTypes<span class="token punctuation">,</span> problem<span class="token punctuation">.</span>ranges<span class="token punctuation">,</span> problem<span class="token punctuation">.</span>borders<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 创建区域描述器</span>    population <span class="token operator">=</span> ea<span class="token punctuation">.</span>Population<span class="token punctuation">(</span>Encoding<span class="token punctuation">,</span> Field<span class="token punctuation">,</span> NIND<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 实例化种群对象（此时种群还没被初始化，仅仅是完成种群对象的实例化）</span>    <span class="token triple-quoted-string string">"""================================算法参数设置============================="""</span>    myAlgorithm <span class="token operator">=</span> ea<span class="token punctuation">.</span>moea_NSGA2_templet<span class="token punctuation">(</span>problem<span class="token punctuation">,</span> population<span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 实例化一个算法模板对象</span>    myAlgorithm<span class="token punctuation">.</span>mutOper<span class="token punctuation">.</span>Pm <span class="token operator">=</span> <span class="token number">0.2</span> <span class="token comment" spellcheck="true"># 修改变异算子的变异概率</span>    myAlgorithm<span class="token punctuation">.</span>recOper<span class="token punctuation">.</span>XOVR <span class="token operator">=</span> <span class="token number">0.9</span> <span class="token comment" spellcheck="true"># 修改交叉算子的交叉概率</span>    myAlgorithm<span class="token punctuation">.</span>MAXGEN <span class="token operator">=</span> <span class="token number">200</span>    <span class="token comment" spellcheck="true"># 最大进化代数</span>    <span class="token triple-quoted-string string">"""==========================调用算法模板进行种群进化========================"""</span>    NDSet <span class="token operator">=</span> myAlgorithm<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true"># 执行算法模板，得到帕累托最优解集NDSet</span>    NDSet<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true"># 把结果保存到文件中</span>    <span class="token comment" spellcheck="true"># 输出</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'用时：%s 秒'</span><span class="token operator">%</span><span class="token punctuation">(</span>myAlgorithm<span class="token punctuation">.</span>passTime<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'非支配个体数：%s 个'</span><span class="token operator">%</span><span class="token punctuation">(</span>NDSet<span class="token punctuation">.</span>sizes<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'单位时间找到帕累托前沿点个数：%s 个'</span><span class="token operator">%</span><span class="token punctuation">(</span>int<span class="token punctuation">(</span>NDSet<span class="token punctuation">.</span>sizes <span class="token operator">//</span> myAlgorithm<span class="token punctuation">.</span>passTime<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以得到输出：</p><pre class="line-numbers language-shell"><code class="language-shell">种群信息导出完毕。用时：0.15359210968017578 秒非支配个体数：50 个单位时间找到帕累托前沿点个数：325 个<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>帕累托前沿分布：</p><p><img src="E:\Thor\Documents\Study\数学建模\数学规划.assets\image-20200706142245386.png" alt="image-20200706142245386"></p><p>结果保存为文件：</p><p><img src="E:\Thor\Documents\Study\数学建模\数学规划.assets\image-20200706143959892.png" alt="image-20200706143959892"></p><h1 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h1><h2 id="优化问题"><a href="#优化问题" class="headerlink" title="优化问题"></a>优化问题</h2><ul><li><h4 id="给定一组约束条件和一个代价函数，在解空间中搜索具有最小或最大代价的优化解"><a href="#给定一组约束条件和一个代价函数，在解空间中搜索具有最小或最大代价的优化解" class="headerlink" title="给定一组约束条件和一个代价函数，在解空间中搜索具有最小或最大代价的优化解"></a>给定一组约束条件和一个代价函数，在解空间中搜索具有最小或最大代价的优化解</h4></li><li><h4 id="很多优化问题可分为多个子问题，子问题相互关联，子问题的解被-重复使用"><a href="#很多优化问题可分为多个子问题，子问题相互关联，子问题的解被-重复使用" class="headerlink" title="很多优化问题可分为多个子问题，子问题相互关联，子问题的解被==重复使用=="></a>很多优化问题可分为多个子问题，子问题相互关联，子问题的解被==重复使用==</h4></li></ul><h2 id="使用条件"><a href="#使用条件" class="headerlink" title="使用条件"></a>使用条件</h2><ul><li><h4 id="优化子结构"><a href="#优化子结构" class="headerlink" title="优化子结构"></a>优化子结构</h4><ul><li><strong>一个问题的优化解包含了子问题的优化解</strong></li></ul></li><li><h4 id="重叠子问题"><a href="#重叠子问题" class="headerlink" title="重叠子问题"></a>重叠子问题</h4><ul><li><strong>在问题的求解过程中，很多子问题的解将被多次使用</strong></li></ul></li></ul><h2 id="设计步骤"><a href="#设计步骤" class="headerlink" title="设计步骤"></a>设计步骤</h2><ul><li><h4 id="刻画一个最优解的结构特征"><a href="#刻画一个最优解的结构特征" class="headerlink" title="刻画一个最优解的结构特征"></a>刻画一个最优解的结构特征</h4><p>寻找最优子结构，利用这种子结构从子问题的最优解构造出原问题的最优解</p></li><li><h4 id="递归定义最优解的值"><a href="#递归定义最优解的值" class="headerlink" title="递归定义最优解的值"></a>递归定义最优解的值</h4></li><li><h4 id="自底向上计算最优解的值"><a href="#自底向上计算最优解的值" class="headerlink" title="自底向上计算最优解的值"></a>自底向上计算最优解的值</h4></li><li><h4 id="根据构造最优解的信息构造优化解"><a href="#根据构造最优解的信息构造优化解" class="headerlink" title="根据构造最优解的信息构造优化解"></a>根据构造最优解的信息构造优化解</h4></li></ul><h2 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h2><ul><li><h4 id="带备忘的自顶向下法"><a href="#带备忘的自顶向下法" class="headerlink" title="带备忘的自顶向下法"></a>带备忘的自顶向下法</h4><ul><li>递归求解</li><li>保存每个子问题的解（数组或散列表）</li></ul></li><li><h4 id="自底向上法"><a href="#自底向上法" class="headerlink" title="自底向上法"></a>自底向上法</h4><ul><li>恰当定义子问题的<strong>规模</strong></li><li>任何子问题的求解都只依赖于<strong>更小的</strong>子问题的解</li><li>按子问题规模<strong>由小到大进行求解</strong></li><li>第一次求解一个问题时，它的所有前提子问题都已求解完成且<strong>保存结果</strong></li></ul></li></ul><p>两种方法的算法的<strong>渐进运行时间相同</strong>，<strong>自底向上的时间复杂性</strong>函数通常具有更小的系数，某些情况下自顶向下无法真正递归考察所有可能的子问题。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><h3 id="最优子结构"><a href="#最优子结构" class="headerlink" title="最优子结构"></a>最优子结构</h3><ul><li><p><strong>发掘最优子结构的通用模式</strong></p><ol><li>证明问题最优解的第一个组成部分是做出一个选择，做出这次选择会产生一个或多个待解的子问题</li><li>对于一个给定问题，在其可能的第一步选择中，你<strong>假定已经知道</strong>哪种选择才会得到最优解。并<strong>不关心如何得到，只是假定已经知道</strong></li><li>给定可获得最优解的选择后，你确定这次选择会产生哪些<strong>子问题</strong>，以及如何<strong>最好地刻画子问题空间</strong></li></ol></li><li><p><strong>保持子问题空间尽可能简单，只在必要时才扩展它</strong></p></li><li><p><strong>不同问题领域，最优子结构的不同</strong>：</p><ul><li>原问题的最优解中涉及多少个子问题</li><li>再确定最优解使用哪些子问题时，我们需要考虑多少种选择</li></ul></li><li><p><strong>粗略分析算法的运行时间：</strong><br>$$<br>O(m\times n)\<br>\Theta(n):子问题个数\quad\quad m:考察的选择个数<br>$$</p></li></ul><h3 id="重构最优解"><a href="#重构最优解" class="headerlink" title="重构最优解"></a>重构最优解</h3><p><strong>将每个子问题所做的选择存在一个表中</strong>：重构每次选择只需$$O(1)$$时间</p><h3 id="备忘"><a href="#备忘" class="headerlink" title="备忘"></a>备忘</h3><p>维护一个表记录子问题的解，保持递归算法的控制流程：</p><ul><li>每个表项的初值设为一个特殊值，表示尚未填入子问题的解</li><li>当递归调用过程中第一次遇到子问题时，计算其解，并存入对应表项</li><li>每次遇到同一个子问题，查表返回解</li></ul><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><ul><li><strong>通常情况</strong>：每个子问题必须至少求解一次<ul><li>自底向上动态规划算法比自顶向下备忘算法快（都是$$O(n^3)$$，相差常量系数）</li><li>自底向上算法没有递归调用的开销，表的维护开销更小</li></ul></li><li><strong>某些问题：</strong>可利用表的访问模式进一步降低时空代价</li><li><strong>某些子问题完全不必求解：</strong>备忘方法更有优势（只求解必要子问题）</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sympy的基本使用</title>
      <link href="/2020/08/08/sympy/"/>
      <url>/2020/08/08/sympy/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> sympy <span class="token keyword">import</span> <span class="token operator">*</span>init_printing<span class="token punctuation">(</span>use_unicode<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="https://docs.sympy.org/latest/tutorial/index.html"><code>Sympy</code></a>是一个用于符号计算的python库，可以完成多项式求值、求极限、解方程、求积分、微分方程等符号计算问题，介绍一些常用功能。</p><h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><h2 id="1-定义变量"><a href="#1-定义变量" class="headerlink" title="1. 定义变量"></a>1. 定义变量</h2><pre class="line-numbers language-python"><code class="language-python">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token operator">=</span> symbols<span class="token punctuation">(</span><span class="token string">"x y z"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 多个变量</span>t <span class="token operator">=</span> Symbol<span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 单个变量</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-运算符"><a href="#2-运算符" class="headerlink" title="2. 运算符"></a>2. 运算符</h2><h3 id="导数diff"><a href="#导数diff" class="headerlink" title="导数diff"></a>导数<code>diff</code></h3><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> diff<span class="token punctuation">(</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 高阶导数两种写法</span>In<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> diff<span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">4</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">24</span>⋅xIn<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> diff<span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">4</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">24</span>⋅x<span class="token comment" spellcheck="true"># 偏导数</span>In<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>     expr <span class="token operator">=</span> exp<span class="token punctuation">(</span>x<span class="token operator">*</span>y<span class="token operator">*</span>z<span class="token punctuation">)</span>         diff<span class="token punctuation">(</span>expr<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> z<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token number">3</span>  <span class="token number">2</span> ⎛ <span class="token number">3</span>  <span class="token number">3</span>  <span class="token number">3</span>       <span class="token number">2</span>  <span class="token number">2</span>  <span class="token number">2</span>                ⎞  x⋅y⋅zx ⋅y ⋅⎝x ⋅y ⋅z  <span class="token operator">+</span> <span class="token number">14</span>⋅x ⋅y ⋅z  <span class="token operator">+</span> <span class="token number">52</span>⋅x⋅y⋅z <span class="token operator">+</span> <span class="token number">48</span>⎠⋅ℯ<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="积分intergrate"><a href="#积分intergrate" class="headerlink" title="积分intergrate"></a>积分<code>intergrate</code></h3><p><code>intergrate(integration_variable, lower_limit, upper_limit)</code></p><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> integrate<span class="token punctuation">(</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span>In<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> integrate<span class="token punctuation">(</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> oo<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token comment" spellcheck="true"># 多重积分</span>In<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> integrate<span class="token punctuation">(</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>y<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token operator">-</span>oo<span class="token punctuation">,</span>oo<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token operator">-</span>oo<span class="token punctuation">,</span> oo<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> π<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="极限limit"><a href="#极限limit" class="headerlink" title="极限limit"></a>极限<code>limit</code></h3><p><code>limit(f(x), x, x0)</code></p><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> limit<span class="token punctuation">(</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">/</span>x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token comment" spellcheck="true"># 单侧极限</span>In<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> limit<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'+'</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> ∞<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="等式Eq"><a href="#等式Eq" class="headerlink" title="等式Eq"></a>等式<code>Eq</code></h3><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> Eq<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x <span class="token operator">=</span> y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-方程"><a href="#3-方程" class="headerlink" title="3. 方程"></a>3. 方程</h2><h3 id="代数方程solveset"><a href="#代数方程solveset" class="headerlink" title="代数方程solveset"></a>代数方程<code>solveset</code></h3><p><code>solveset(f, symbol=None, domain=S.Complexes)</code></p><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> solveset<span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>x<span class="token punctuation">,</span> x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;0, 1&amp;#125;</span>In<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> solveset<span class="token punctuation">(</span>exp<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> ∅<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="线性方程组linsolve"><a href="#线性方程组linsolve" class="headerlink" title="线性方程组linsolve"></a>线性方程组<code>linsolve</code></h3><p><code>linsolve(system, *symbols)</code></p><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> linsolve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">+</span>y<span class="token operator">+</span>z<span class="token number">-1</span><span class="token punctuation">,</span>x<span class="token operator">+</span>y<span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span>z<span class="token number">-3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(-y - 1, y, 2)&amp;#125;</span>In<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span>linsolve<span class="token punctuation">(</span>Matrix<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(-y - 1, y, 2)&amp;#125;</span>In<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> M <span class="token operator">=</span> Matrix<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        system <span class="token operator">=</span> A<span class="token punctuation">,</span> b <span class="token operator">=</span> M<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> M<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        linsolve<span class="token punctuation">(</span>system<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(-y - 1, y, 2)&amp;#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="非线性方程组nonlinsolve"><a href="#非线性方程组nonlinsolve" class="headerlink" title="非线性方程组nonlinsolve"></a>非线性方程组<code>nonlinsolve</code></h3><p><code>nonlinsolve(system, *symbols)</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 仅有实数解</span>In<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> nonlinsolve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">*</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(2, 1/2)&amp;#125;</span><span class="token comment" spellcheck="true"># 仅有复数解</span>In<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> nonlinsolve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> y<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(-ⅈ, -ⅈ), (-ⅈ, ⅈ), (ⅈ, -ⅈ), (ⅈ, ⅈ)&amp;#125;</span><span class="token comment" spellcheck="true"># 同时存在实数解和复数解</span>In<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> nonlinsolve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>y<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> x<span class="token operator">*</span>y<span class="token number">-2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(-2, -1), (2, 1), (-√2⋅ⅈ, √2⋅ⅈ), (√2⋅ⅈ, -√2⋅ⅈ)&amp;#125;</span><span class="token comment" spellcheck="true"># 无数值解</span>In<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> nonlinsolve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">*</span>y<span class="token punctuation">,</span> x<span class="token operator">*</span>y<span class="token operator">-</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(0, y)&amp;#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解的顺序与给定符号的顺序相对应.</p><h3 id="微分方程dsolve"><a href="#微分方程dsolve" class="headerlink" title="微分方程dsolve"></a>微分方程<code>dsolve</code></h3><p><code>dsolve(eq, func=None, hint="default", simplify=True, ics= None, xi=None, eta=None, x0=0, n=6, **kwargs)</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 首先需要创建新的未定义函数</span>In<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f<span class="token punctuation">,</span> g <span class="token operator">=</span> symbols<span class="token punctuation">(</span><span class="token string">'f g'</span><span class="token punctuation">,</span> cls<span class="token operator">=</span>Function<span class="token punctuation">)</span>        f<span class="token punctuation">(</span>x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 定义方程</span>In<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">:</span>diffeq <span class="token operator">=</span> Eq<span class="token punctuation">(</span>x<span class="token punctuation">.</span>diff<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token operator">*</span>f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>diff<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span>          d                f<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span>⋅──<span class="token punctuation">(</span>f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>         dx               In<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dsolve<span class="token punctuation">(</span>diffeq<span class="token punctuation">,</span> f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        ⎛      <span class="token operator">-</span>x              <span class="token operator">-</span>x        ⎞          ⎜      ───             ───       ⎟  x       ⎜       <span class="token number">2</span>               <span class="token number">2</span>        ⎟  ─       ⎜     ℯ   ⋅sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>   <span class="token number">2</span>⋅ℯ   ⋅cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span>⎟  <span class="token number">2</span>f<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=</span> ⎜C₁ <span class="token operator">+</span> ─────────── <span class="token operator">+</span> ─────────────⎟⋅ℯ        ⎝          <span class="token number">5</span>              <span class="token number">5</span>      ⎠ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gunicorn基本使用</title>
      <link href="/2020/04/03/gunicorn-ji-ben-shi-yong/"/>
      <url>/2020/04/03/gunicorn-ji-ben-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="开启Gunicorn任务"><a href="#开启Gunicorn任务" class="headerlink" title="开启Gunicorn任务"></a>开启Gunicorn任务</h1><pre class="line-numbers language-shell"><code class="language-shell">gunicorn --bind unix:/tmp/域名.socket projectname.wsgi:application<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="查找masterpid"><a href="#查找masterpid" class="headerlink" title="查找masterpid"></a>查找masterpid</h1><p>首先获取Gunicorn进程树，获取进程pid</p><pre class="line-numbers language-shell"><code class="language-shell">pstree -ap|grep gunicorn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402234636.png"></p><p>可以看到，29585为主进程</p><h1 id="重启Gunicorn任务"><a href="#重启Gunicorn任务" class="headerlink" title="重启Gunicorn任务"></a>重启Gunicorn任务</h1><pre class="line-numbers language-shell"><code class="language-shell">kill -HUP pid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="退出Gunicorn任务"><a href="#退出Gunicorn任务" class="headerlink" title="退出Gunicorn任务"></a>退出Gunicorn任务</h1><pre class="line-numbers language-shell"><code class="language-shell">kill -9 pid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次查看Gunicorn进程树，可以看到主进程已经停止</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402234859.png"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 脱坑实录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu服务器安装Anaconda</title>
      <link href="/2020/04/03/ubuntu-fu-wu-qi-an-zhuang-anaconda/"/>
      <url>/2020/04/03/ubuntu-fu-wu-qi-an-zhuang-anaconda/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Anaconda 是一个用于科学计算的 Python 发行版，支持 Linux, Mac, Windows, 包含了众多流行的科学计算、数据分析的 Python 包。</p></blockquote><h1 id="Anaconda-下载"><a href="#Anaconda-下载" class="headerlink" title="Anaconda 下载"></a>Anaconda 下载</h1><ul><li><h2 id="Anaconda官网"><a href="#Anaconda官网" class="headerlink" title="Anaconda官网"></a><a href="https://www.anaconda.com/">Anaconda官网</a></h2><p>如果有梯子的话速度会比较快，如果没有梯子的话，速度可能会<strong>很慢</strong>。</p></li><li><h2 id="清华大学开源软件镜像站"><a href="#清华大学开源软件镜像站" class="headerlink" title="清华大学开源软件镜像站"></a><a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/">清华大学开源软件镜像站</a></h2><p>建议使用这种方式下载（<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">下载地址</a>），按时间排序，选择合适的最新版：<code>64位Linux版</code></p><p>可以先下载到本地，通过<code>Xftp</code>传到Ubuntu服务器，也可以直接下载到服务器端。</p></li></ul><h1 id="Anaconda-安装"><a href="#Anaconda-安装" class="headerlink" title="Anaconda 安装"></a>Anaconda 安装</h1><ol><li><p>在终端中进到<code>.sh</code>文件所在文件夹</p></li><li><p>运行<code>.sh</code>文件</p><pre class="line-numbers language-shell"><code class="language-shell">bash Anaconda3-2020.02-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>一路<code>Enter</code>，然后输入<code>yes</code>，接受协议</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/%E6%89%B9%E6%B3%A8%202020-04-02%20230506.png"></p></li><li><p>选择安装路径，<code>Enter</code>选择默认路径，也可以自己更改</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402231106.png"></p><p>选择完成后，开始安装</p></li><li><p>安装完成后，选择使用<code>conda</code></p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402232510.png"></p></li><li><p>安装成功</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402232718.png"></p></li></ol><h1 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h1><ol><li><p>打开配置文件</p><pre class="line-numbers language-shell"><code class="language-shell">vim ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>添加环境路径</p><pre><code>export PATH=/home/XXX/anaconda3/bin:$PATH</code></pre><p>填入自己的安装路径</p></li><li><p>激活环境</p><pre class="line-numbers language-shell"><code class="language-shell">source ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>查看Anaconda和python版本</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402233509.png"></p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 脱坑实录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置虚拟环境</title>
      <link href="/2020/03/29/linux-pei-zhi-xu-ni-huan-jing/"/>
      <url>/2020/03/29/linux-pei-zhi-xu-ni-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="安装虚拟环境"><a href="#安装虚拟环境" class="headerlink" title="安装虚拟环境"></a>安装虚拟环境</h1><p>输入命令：</p><pre class="line-numbers language-shell"><code class="language-shell">sudo pip install virtualenvsudo pip install virtualenvwrapper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><strong>virtualenv</strong>是虚拟环境的软件工具，可以在系统中建立多个互不干扰的虚拟环境</li><li><strong>virtualenvwrapper</strong>对<strong>virtualenv</strong>进行封装，更加方便管理虚拟环境</li></ul><h1 id="virtualenv的使用"><a href="#virtualenv的使用" class="headerlink" title="virtualenv的使用"></a>virtualenv的使用</h1><ul><li><p>新建虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">mkdir Myprojectcd Myprojectvirtualenv --python=python3 venvvirtualenv --no-site-packages --python=python3.7 venv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>--python=python3</code>指定python环境</li><li><code>--no-site-packages</code>指定获取独立第三方包的环境</li><li><code>venv</code>为虚拟环境名称</li></ul></li><li><p>激活虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">source venv/bin/activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>退出虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h1 id="配置一致的开发环境"><a href="#配置一致的开发环境" class="headerlink" title="配置一致的开发环境"></a>配置一致的开发环境</h1><ul><li><p>导出当前python环境的包</p><pre class="line-numbers language-shell"><code class="language-shell">pip freeze > requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当前环境所有依赖的包及其版本都会收集到<code>requiements.txt</code>中</p></li><li><p>在新环境中安装项目所需的包</p><pre class="line-numbers language-shell"><code class="language-shell">pip install -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h1 id="使用virtualenvwrapper管理虚拟环境"><a href="#使用virtualenvwrapper管理虚拟环境" class="headerlink" title="使用virtualenvwrapper管理虚拟环境"></a>使用virtualenvwrapper管理虚拟环境</h1><h2 id="设置Linux环境变量"><a href="#设置Linux环境变量" class="headerlink" title="设置Linux环境变量"></a>设置Linux环境变量</h2><ul><li><p>将<strong>virtualenvwrapper</strong>添加到当前的环境变量中，先打开<strong>bashrc</strong>文件（针对当前用户）</p><pre class="line-numbers language-shell"><code class="language-shell">sudo vim ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>写入以下代码</p><pre class="line-numbers language-shell"><code class="language-shell">export WORKON_HOME=~/Envs #设置virtualenv的统一管理目录export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'   export VIRTUALENVWRAPPER_PYTHON=/home/admin/anaconda3/bin/python3 #指定python解释器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>执行<strong>virtualenvwrapper</strong>安装脚本</p><pre class="line-numbers language-shell"><code class="language-shell">source /home/admin/anaconda3/bin/virtualenvwrapper.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>激活设置</p><pre class="line-numbers language-shell"><code class="language-shell">source ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="virtualenvwrapper的使用"><a href="#virtualenvwrapper的使用" class="headerlink" title="virtualenvwrapper的使用"></a>virtualenvwrapper的使用</h2><p><strong>virtualenvwrapper</strong>能够将所有的虚拟环境目录集中起来，能够对所有的虚拟环境进行统一管理，不需要自己去找对应的虚拟环境目录去激活。</p><ul><li><p>创建虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">mkvirtualenv [-a project_path] [-i package] [-r requirements_file] [virtualenv options] ENVNAMEmkvirtualenv dataadmin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>激活虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">worken dataadmin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>退出当前虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以直接切换到另外的环境</p><pre class="line-numbers language-shell"><code class="language-shell">worken anothervenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除虚拟环境（需要先退出）</p><pre class="line-numbers language-shell"><code class="language-shell">rmvirtualenv dataadmin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>所有虚拟环境列表</p><pre class="line-numbers language-shell"><code class="language-shell">lsvirtualenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>导航到当前环境的目录</p><pre class="line-numbers language-shell"><code class="language-shell">cdvirtualenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>导航到当前环境的<strong>site-packages</strong>目录</p><pre class="line-numbers language-shell"><code class="language-shell">cdsitepackages<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>site-packages</strong>列表</p><pre class="line-numbers language-shell"><code class="language-shell">lssitepackages<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>更多操作见<a href="https://virtualenvwrapper.readthedocs.io/en/latest/command_ref.html">官网</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 脱坑实录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pycharm远程调试</title>
      <link href="/2020/03/28/pycharm-yuan-cheng-diao-shi/"/>
      <url>/2020/03/28/pycharm-yuan-cheng-diao-shi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>IDE：PyCharm 2019.3.3 (Professional Edition)<br>ECS：腾讯云 Ubuntu 18.04.4 LTS</p></blockquote><p>利用pycharm进行远程调试，主要有两种模式：</p><ul><li>利用云服务器端的环境调试本地代码，实现本地开发，Linux云端调试</li><li>在本地调试云端代码</li></ul><p>两种模式共同点都需要在本地的pycharm连接上云服务器的环境，首先需要先配置好服务器端的环境。</p><h2 id="一-配置远程连接"><a href="#一-配置远程连接" class="headerlink" title="一. 配置远程连接"></a>一. 配置远程连接</h2><h4 id="1-进入Pycharm菜单栏，如下图依次点击Tools-gt-Deployment-gt-Configuration…"><a href="#1-进入Pycharm菜单栏，如下图依次点击Tools-gt-Deployment-gt-Configuration…" class="headerlink" title="1. 进入Pycharm菜单栏，如下图依次点击Tools->Deployment->Configuration…"></a>1. 进入Pycharm菜单栏，如下图依次点击Tools-&gt;Deployment-&gt;Configuration…</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328204451.png" alt="菜单栏"></p><h4 id="2-右侧点击-添加SFTP"><a href="#2-右侧点击-添加SFTP" class="headerlink" title="2. 右侧点击+添加SFTP"></a>2. 右侧点击+添加SFTP</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328213703.png"></p><h4 id="3-设置Name（自己设置）"><a href="#3-设置Name（自己设置）" class="headerlink" title="3. 设置Name（自己设置）"></a>3. 设置Name（自己设置）</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328213919.png"></p><h4 id="4-填写连接配置"><a href="#4-填写连接配置" class="headerlink" title="4. 填写连接配置"></a>4. 填写连接配置</h4><ul><li><strong>Host（外网IP）</strong></li><li><strong>端口</strong></li><li><strong>用户名</strong></li><li><strong>密码</strong></li></ul><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/1.png" style="zoom:80%;"><p>填好之后可以<strong>测试连接</strong></p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/2.png"></p><p>之后点击<strong>Autodetect</strong>确定根目录</p><h4 id="5-点击OK结束"><a href="#5-点击OK结束" class="headerlink" title="5. 点击OK结束"></a>5. 点击OK结束</h4><h2 id="二-配置远程解释器"><a href="#二-配置远程解释器" class="headerlink" title="二. 配置远程解释器"></a>二. 配置远程解释器</h2><h4 id="1-进入Pycharm菜单栏，如下图依次点击File-gt-Settings…"><a href="#1-进入Pycharm菜单栏，如下图依次点击File-gt-Settings…" class="headerlink" title="1. 进入Pycharm菜单栏，如下图依次点击File->Settings…"></a>1. 进入Pycharm菜单栏，如下图依次点击File-&gt;Settings…</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328223125.png"></p><h4 id="2-选择Project-gt-Project-Interpreter"><a href="#2-选择Project-gt-Project-Interpreter" class="headerlink" title="2. 选择Project->Project Interpreter"></a>2. 选择Project-&gt;Project Interpreter</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328223329.png"></p><h4 id="3-点击添加解释器"><a href="#3-点击添加解释器" class="headerlink" title="3. 点击添加解释器"></a>3. 点击添加解释器</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328223536.png"></p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328223554.png"></p><h4 id="4-选择SSH-Interpreter-gt-Existing-server-configuration-gt-刚刚新建的Deployment"><a href="#4-选择SSH-Interpreter-gt-Existing-server-configuration-gt-刚刚新建的Deployment" class="headerlink" title="4. 选择SSH Interpreter->Existing server configuration->刚刚新建的Deployment"></a>4. 选择SSH Interpreter-&gt;Existing server configuration-&gt;刚刚新建的Deployment</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/4.png"></p><h4 id="5-选择Move-gt-Next"><a href="#5-选择Move-gt-Next" class="headerlink" title="5. 选择Move ->Next"></a>5. 选择Move -&gt;Next</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331105544.png"></p><h4 id="6-设置远端解释器"><a href="#6-设置远端解释器" class="headerlink" title="6. 设置远端解释器"></a>6. 设置远端解释器</h4><p>我在这里设置为虚拟环境中的解释器，是否需要<strong>sudo</strong>权限根据自己的实际需要</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/5.png"></p><p>可以看到pycharm在<code>tmp</code>文件夹下新建了<code>pycharm_project_xxx</code>文件夹用于放置本地的同步项目代码</p><p>点击<strong>Finish</strong>结束配置</p><h4 id="7-成功后可以看到环境中的安装的依赖包"><a href="#7-成功后可以看到环境中的安装的依赖包" class="headerlink" title="7. 成功后可以看到环境中的安装的依赖包"></a>7. 成功后可以看到环境中的安装的依赖包</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328224945.png"></p><p>点击<strong>Apply</strong>完成配置</p><h4 id="8-检查Mappings"><a href="#8-检查Mappings" class="headerlink" title="8. 检查Mappings"></a>8. 检查Mappings</h4><ul><li><strong>Tools-&gt;Deployment-&gt;Configuration…</strong></li><li><strong>查看之前Deployment的Mappings下的Deployment path</strong></li></ul><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331111651.png"></p><ul><li><strong>如果没有自动定位可以手动设置</strong></li></ul><h2 id="三-远程调试本地代码"><a href="#三-远程调试本地代码" class="headerlink" title="三.远程调试本地代码"></a>三.远程调试本地代码</h2><blockquote><p>以<strong>Django</strong>项目为例</p></blockquote><h4 id="1-设置ALLOWED-HOSTS"><a href="#1-设置ALLOWED-HOSTS" class="headerlink" title="1. 设置ALLOWED_HOSTS"></a>1. 设置ALLOWED_HOSTS</h4><p>允许所有的host访问</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># DataAdmin/settings.py</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>ALLOWED_HOSTS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"*"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-自动同步代码"><a href="#2-自动同步代码" class="headerlink" title="2. 自动同步代码"></a>2. 自动同步代码</h4><p>实际的运行过程是：pycharm将本地代码<strong>自动同步</strong>到服务器上对应的的<code>tmp/pycharm_projectXXX</code>文件夹中，实际运行时也是运行的服务器端的代码。</p><ul><li><strong>可以通过File Transfer查看同步情况</strong></li></ul><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331112257.png"></p><ul><li><strong>可以通过Tools-&gt;Deployment-&gt;Browse Remote Host查看服务器端目录结构</strong></li></ul><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331112330.png"></p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331112502.png"></p><h4 id="3-调试运行项目"><a href="#3-调试运行项目" class="headerlink" title="3. 调试运行项目"></a>3. 调试运行项目</h4><ul><li><strong>Run manage.py-&gt;Edit  Configurations…</strong></li></ul><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331110847.png"></p><ul><li><strong>检查Script path是否对应自己的项目地址</strong></li><li><strong>添加Parameters：<code>runserver 0.0.0.0:8000</code></strong></li><li><strong>Apply-&gt;OK</strong></li><li><strong>Run</strong></li></ul><p>打开<strong>IP:8000</strong>，可以看到自己的网页</p><h2 id="四-远程调试云端代码"><a href="#四-远程调试云端代码" class="headerlink" title="四. 远程调试云端代码"></a>四. 远程调试云端代码</h2><h4 id="1-连接到服务器Tools-gt-Start-SSH-session…"><a href="#1-连接到服务器Tools-gt-Start-SSH-session…" class="headerlink" title="1. 连接到服务器Tools->Start SSH session…"></a>1. 连接到服务器Tools-&gt;Start SSH session…</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328231327.png"></p><h4 id="2-选择对应的HOST"><a href="#2-选择对应的HOST" class="headerlink" title="2.选择对应的HOST"></a>2.选择对应的HOST</h4><p>连接成功后，会有终端显示</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/7.png"></p><h4 id="3-显示服务器目录结构Tools-gt-Deployment-gt-Browse-Remote-Host"><a href="#3-显示服务器目录结构Tools-gt-Deployment-gt-Browse-Remote-Host" class="headerlink" title="3. 显示服务器目录结构Tools->Deployment->Browse Remote Host"></a>3. 显示服务器目录结构Tools-&gt;Deployment-&gt;Browse Remote Host</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328231901.png"></p><p>选择后会显示出服务器目录结构，选中项目文件能够打开编辑</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/9.png"></p><h4 id="4-编辑完成后更新版本"><a href="#4-编辑完成后更新版本" class="headerlink" title="4. 编辑完成后更新版本"></a>4. 编辑完成后更新版本</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328232528.png"></p><p>可以设置自动上传更新<strong>Tools-&gt;Deployment-&gt;Automatic Upload</strong></p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328232726.png"></p><h4 id="5-在终端调试运行"><a href="#5-在终端调试运行" class="headerlink" title="5. 在终端调试运行"></a>5. 在终端调试运行</h4><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 脱坑实录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Channels实现WebSocket协议</title>
      <link href="/2020/03/08/li-yong-channels-shi-xian-websocket-xie-yi/"/>
      <url>/2020/03/08/li-yong-channels-shi-xian-websocket-xie-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP协议与WebSocket协议"><a href="#HTTP协议与WebSocket协议" class="headerlink" title="HTTP协议与WebSocket协议"></a>HTTP协议与WebSocket协议</h1><h2 id="HTTP协议简介"><a href="#HTTP协议简介" class="headerlink" title="HTTP协议简介"></a>HTTP协议简介</h2><p>​    HTTP协议指超文本传输协议（<strong>H</strong>yper<strong>T</strong>ext <strong>T</strong>ransfer <strong>P</strong>rotocol），是用于从万维网服务器传输超文本到本地浏览器的传送协议，是基于TCP/IP协议之上的应用层协议。</p><h3 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h3><ol><li><strong>简单快速</strong>：客户向服务器请求服务时，只需传送请求方法和路径，通信速度很快。</li><li><strong>灵活</strong>：HTTP允许传输任意类型的数据对象。</li><li><strong>无连接</strong>：限制每次连接只处理<strong>一个</strong>请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li><li><strong>无状态</strong>：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</li><li><strong>支持客户端/服务器模型</strong></li></ol><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>HTTP是基于客户/服务器模式，且面向连接的。典型的HTTP事务处理有如下的过程：</p><ol><li>客户与服务器建立连接；</li><li>客户向服务器提出请求；</li><li>服务器接受请求，并根据请求返回相应的文件作为应答；</li><li>客户与服务器关闭连接。</li></ol><h2 id="WebSocket协议简介"><a href="#WebSocket协议简介" class="headerlink" title="WebSocket协议简介"></a>WebSocket协议简介</h2><p>​    现在，很多网站为了实现推送技术，所用的技术都是 Ajax 轮询。轮询是在特定的的时间间隔（如每1秒），由浏览器对服务器发出HTTP请求，然后由服务器返回最新的数据给客户端的浏览器。这种传统的模式带来很明显的缺点，即浏览器需要不断的向服务器发出请求，然而HTTP请求可能包含较长的头部，其中真正有效的数据可能只是很小的一部分，显然这样会浪费很多的带宽等资源。</p><p>​    HTML5 定义的 WebSocket 协议，能更好的节省服务器资源和带宽，并且能够更实时地进行通讯。    </p><p>​    <strong>WebSocket</strong>是一种在单个TCP连接上进行全双工通信的协议。WebSocket使得客户端和服务器之间的数据交换变得更加简单，<strong>允许服务端主动向客户端推送数据</strong>。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建<strong>持久性的连接</strong>，并进行<strong>双向数据传输</strong>。</p><h1 id="Django-Channels实现WebSocket实时通讯"><a href="#Django-Channels实现WebSocket实时通讯" class="headerlink" title="Django Channels实现WebSocket实时通讯"></a>Django Channels实现WebSocket实时通讯</h1><blockquote><p><a href="https://channels.readthedocs.io/en/latest/">官方文档</a></p></blockquote><p>​    <strong>Channels</strong>是一个采用Django并将其功能拓展到HTTP以外的项目，以处理WebSocket协议。它基于称为<a href="http://asgi.readthedocs.io/">ASGI</a>的Python规范构建。</p><p>​    接下来基于官方Tutorial1-2简单介绍Channels的使用。</p><p>​    首先需要安装Django和Channels</p><pre class="line-numbers language-powershell"><code class="language-powershell">pip install djangopip install channels<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​    创建一个Django项目，并进入项目根目录：</p><pre class="line-numbers language-powershell"><code class="language-powershell">django<span class="token operator">-</span>admin startproject mysitecd mysite<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​    接下来创建Channels的根路由<code>routing.py</code>，channels的路由配置与Django URLconf相似，它告诉Channels当Channels服务器接收到HTTP请求时要运行什么代码。</p><p>​    首先从一个空的路由配置开始，创建文件<code>mysite/routing.py</code>，包含以下代码：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/routing.py</span><span class="token keyword">from</span> channels<span class="token punctuation">.</span>routing <span class="token keyword">import</span> ProtocolTypeRouterapplication <span class="token operator">=</span> ProtocolTypeRouter<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token comment" spellcheck="true"># (http->django views is added by default)</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    然后将Channels库在应用列表中进行注册：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/settings.py</span>INSTALLED_APPS <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'django.contrib.admin'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.auth'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.contenttypes'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.sessions'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.messages'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.staticfiles'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 新添加</span>    <span class="token string">'channels'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    继续编辑<code>mtsite/settings.py</code>将Channels指向根路由配置，添加以下代码：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/settings.py</span><span class="token comment" spellcheck="true"># Channels</span>ASGI_APPLICATION <span class="token operator">=</span> <span class="token string">'mysite.routing.application'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​    此时Channels可以控制<code>runserver</code>命令，用Channels开发服务器代替标准的Django开发服务器。</p><p>​    运行Django项目：</p><pre class="line-numbers language-powershell"><code class="language-powershell">py manage<span class="token punctuation">.</span>py runserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    将会看到以下输出：</p><pre class="line-numbers language-powershell"><code class="language-powershell">Performing system checks<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>System check identified no issues <span class="token punctuation">(</span>0 silenced<span class="token punctuation">)</span><span class="token punctuation">.</span>You have 17 unapplied migration<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span> Your project may not work properly <span class="token keyword">until</span> you apply the migrations <span class="token keyword">for</span> app<span class="token punctuation">(</span>s<span class="token punctuation">)</span>: admin<span class="token punctuation">,</span> auth<span class="token punctuation">,</span> contenttypes<span class="token punctuation">,</span> sessions<span class="token punctuation">.</span>Run <span class="token string">'python manage.py migrate'</span> to apply them<span class="token punctuation">.</span>March 07<span class="token punctuation">,</span> 2020 <span class="token operator">-</span> 22:45:04Django version 3<span class="token punctuation">.</span>0<span class="token punctuation">.</span>2<span class="token punctuation">,</span> <span class="token keyword">using</span> settings <span class="token string">'mysite.settings'</span>Starting ASGI<span class="token operator">/</span>Channels version 2<span class="token punctuation">.</span>4<span class="token punctuation">.</span>0 development server at http:<span class="token operator">/</span><span class="token operator">/</span>127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:8000<span class="token operator">/</span>Quit the server with CTRL<span class="token operator">-</span><span class="token keyword">BREAK</span><span class="token punctuation">.</span>HTTP GET <span class="token operator">/</span> 200 <span class="token punctuation">[</span>0<span class="token punctuation">.</span>04<span class="token punctuation">,</span> 127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:54871<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    可以看到<code>Starting ASGI/Channels development server at http://127.0.0.1:8000/</code>，说明Channels开发服务器已从Django开发服务器接管项目。打开<a href="http://127.0.0.1:8000/">初始界面</a>，你将看到熟悉的小火箭：<img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200307225354.png" style="zoom: 80%;"></p><p>​    关闭服务器，创建app<code>event</code>：</p><pre class="line-numbers language-powershell"><code class="language-powershell">py manage<span class="token punctuation">.</span>py startapp event<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    注册app：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/settings.py</span>INSTALLED_APPS <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'django.contrib.admin'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.auth'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.contenttypes'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.sessions'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.messages'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.staticfiles'</span><span class="token punctuation">,</span>    <span class="token string">'channels'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 新添加</span>    <span class="token string">'event'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    在<strong>根目录</strong>新建文件夹<code>templates</code>以及<code>templates/event</code>文件夹放置html文件，在<code>mysite/settings.py</code>中添加路径：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/settings.py</span>TEMPLATES <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token string">'BACKEND'</span><span class="token punctuation">:</span> <span class="token string">'django.template.backends.django.DjangoTemplates'</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 修改</span>        <span class="token string">'DIRS'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">'templates'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'APP_DIRS'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>        <span class="token string">'OPTIONS'</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'context_processors'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token string">'django.template.context_processors.debug'</span><span class="token punctuation">,</span>                <span class="token string">'django.template.context_processors.request'</span><span class="token punctuation">,</span>                <span class="token string">'django.contrib.auth.context_processors.auth'</span><span class="token punctuation">,</span>                <span class="token string">'django.contrib.messages.context_processors.messages'</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    在<code>templates</code>中添加视图文件<code>event/list.html</code>，其中WebSocket请求部分模板如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">Filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"WebSocket"</span> <span class="token keyword">in</span> window<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//alert("您的浏览器支持WebSocket!");</span>            <span class="token comment" spellcheck="true">// 重定向URL</span>            <span class="token keyword">let</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">"ws://"</span><span class="token operator">+</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>host <span class="token operator">+</span> <span class="token string">"/ws/event/list/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ws<span class="token punctuation">.</span>onopen <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">"测试"</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">// 需要传输的数据</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            ws<span class="token punctuation">.</span>onmessage <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>evt<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> received_msg <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> feed_back <span class="token operator">=</span> received_msg<span class="token punctuation">[</span><span class="token string">'feedback'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token function">alert</span><span class="token punctuation">(</span>feedback<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 处理接受数据</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            ws<span class="token punctuation">.</span>onclose <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//alert("WebSocket连接已关闭...");</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"你的浏览器不支持WebSocket!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    创建视图功能<code>event/views.py</code>：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># event/views.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render<span class="token keyword">def</span> <span class="token function">list</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">'event/list.html'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;&amp;#125;)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    创建路由<code>event/urls.py</code>：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># event/urls.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> viewsurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    path<span class="token punctuation">(</span><span class="token string">'list/'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>list<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'list'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    将<code>event app</code>的路由添加到项目的根路由中：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/urls.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>urls <span class="token keyword">import</span> include<span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> adminurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    path<span class="token punctuation">(</span><span class="token string">'admin/'</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span>    path<span class="token punctuation">(</span><span class="token string">'event/'</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">'event.urls'</span><span class="token punctuation">,</span> namespace<span class="token operator">=</span><span class="token string">'event'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Channels处理请求过程：</p><pre><code>1. Channels接受HTTP请求 2. 查询根URLconf查找**消费者(consumer)** 3. 在**消费者(consumer)**中调用各种功能来处理连接的事件</code></pre><p>创建**消费者(consumer)**文件<code>event/consumers.py</code>：</p><pre class="line-numbers language-powershell"><code class="language-powershell">event<span class="token operator">/</span>    __init__<span class="token punctuation">.</span>py    ……    consumers<span class="token punctuation">.</span>py    ……    urls<span class="token punctuation">.</span>py    views<span class="token punctuation">.</span>py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    代码模板如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># event/consumers.py</span><span class="token keyword">from</span> channels<span class="token punctuation">.</span>generic<span class="token punctuation">.</span>websocket <span class="token keyword">import</span> WebsocketConsumer<span class="token keyword">import</span> json<span class="token keyword">class</span> <span class="token class-name">ListDataConsumer</span><span class="token punctuation">(</span>WebsocketConsumer<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">connect</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">disconnect</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> close_code<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">receive</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text_data<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 字典化接收数据</span>        text_data_json <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>text_data<span class="token punctuation">)</span>        message <span class="token operator">=</span> text_data_json<span class="token punctuation">[</span><span class="token string">'message'</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 数据处理</span>        self<span class="token punctuation">.</span>send<span class="token punctuation">(</span>text_data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token string">'feedback'</span><span class="token punctuation">:</span> <span class="token string">"Accept"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 返回数据</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;))</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    为<code>consumers.py</code>配置路由，新建<code>event/routing.py</code>：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># event/routing.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> re_path<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> consumerswebsocket_urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    re_path<span class="token punctuation">(</span>r<span class="token string">'ws/event/list/$'</span><span class="token punctuation">,</span> consumers<span class="token punctuation">.</span>ListDataConsumer<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    接下来将根路由指向<code>event/routing.py</code>文件：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/routing.py</span><span class="token keyword">from</span> channels<span class="token punctuation">.</span>auth <span class="token keyword">import</span> AuthMiddlewareStack<span class="token keyword">from</span> channels<span class="token punctuation">.</span>routing <span class="token keyword">import</span> ProtocolTypeRouter<span class="token punctuation">,</span> URLRouter<span class="token keyword">import</span> event<span class="token punctuation">.</span>routingapplication <span class="token operator">=</span> ProtocolTypeRouter<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token comment" spellcheck="true"># (http->django views is added by default)</span>    <span class="token string">'websocket'</span><span class="token punctuation">:</span> AuthMiddlewareStack<span class="token punctuation">(</span>        URLRouter<span class="token punctuation">(</span>            event<span class="token punctuation">.</span>routing<span class="token punctuation">.</span>websocket_urlpatterns        <span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    此根路由配置指定当与Channels开发服务器建立连接时，<code>ProtocolTypeRouter</code>将首先检查连接的类型。如果它是WebSocket连接（<strong>ws：//**或</strong>wss：//**），则该连接将分配给<code>AuthMiddlewareStack</code>。</p><p>​    在<code>AuthMiddlewareStack</code>将填充的连接的<strong>范围</strong>覆盖到当前认证的用户，然后将连接到<code>URLRouter</code>。该<code>URLRouter</code>会研究基础上，提供连接到路由到特定消费者的HTTP路径，基于<code>url</code>模式。</p><p>​    之后进行数据库模型迁移：</p><pre class="line-numbers language-powershell"><code class="language-powershell">py manage<span class="token punctuation">.</span>py makemigrationspy manage<span class="token punctuation">.</span>py migrate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​    运行项目：</p><pre class="line-numbers language-powershell"><code class="language-powershell">py manage<span class="token punctuation">.</span>py runserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    如果连接建立成功，后台应该有如下显示：</p><pre class="line-numbers language-powershell"><code class="language-powershell">HTTP GET <span class="token operator">/</span>event<span class="token operator">/</span>list<span class="token operator">/</span> 200 <span class="token punctuation">[</span>0<span class="token punctuation">.</span>06<span class="token punctuation">,</span> 127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:58855<span class="token punctuation">]</span>WebSocket HANDSHAKING <span class="token operator">/</span>ws<span class="token operator">/</span>event<span class="token operator">/</span>list<span class="token operator">/</span> <span class="token punctuation">[</span>127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:58906<span class="token punctuation">]</span>WebSocket CONNECT <span class="token operator">/</span>ws<span class="token operator">/</span>event<span class="token operator">/</span>list<span class="token operator">/</span> <span class="token punctuation">[</span>127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:58906<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>​    使用Channels的一般流程如上，在配置ASGI之后，Channels的服务器会替代原有的Django服务器处理请求。</p><p>​    只有在需要使用WebSocket协议进行实时通信时需要配置<code>routing.py</code>和<code>consumers.py</code>，由<code>routing.py</code>指向<code>consumers.py</code>处理WebSocket请求，其余仅使用HTTP协议请求的使用方式与之前并<strong>没有任何区别</strong>。</p><p>​    因为只是在一个项目中的某个app中使用了Channels，可以参考该<a href="https://github.com/Thooooor/GovermentDataAdmin">项目代码</a>中的<code>event</code>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
