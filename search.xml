<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Sympy的基本使用</title>
      <link href="/2020/08/08/sympy/"/>
      <url>/2020/08/08/sympy/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> sympy <span class="token keyword">import</span> <span class="token operator">*</span>init_printing<span class="token punctuation">(</span>use_unicode<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="https://docs.sympy.org/latest/tutorial/index.html"><code>Sympy</code></a>是一个用于符号计算的python库，可以完成多项式求值、求极限、解方程、求积分、微分方程等符号计算问题，介绍一些常用功能。</p><h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><h2 id="1-定义变量"><a href="#1-定义变量" class="headerlink" title="1. 定义变量"></a>1. 定义变量</h2><pre class="line-numbers language-python"><code class="language-python">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token operator">=</span> symbols<span class="token punctuation">(</span><span class="token string">"x y z"</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 多个变量</span>t <span class="token operator">=</span> Symbol<span class="token punctuation">(</span><span class="token string">'t'</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true"># 单个变量</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="2-运算符"><a href="#2-运算符" class="headerlink" title="2. 运算符"></a>2. 运算符</h2><h3 id="导数diff"><a href="#导数diff" class="headerlink" title="导数diff"></a>导数<code>diff</code></h3><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> diff<span class="token punctuation">(</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 高阶导数两种写法</span>In<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> diff<span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">4</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">24</span>⋅xIn<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> diff<span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">4</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">24</span>⋅x<span class="token comment" spellcheck="true"># 偏导数</span>In<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>     expr <span class="token operator">=</span> exp<span class="token punctuation">(</span>x<span class="token operator">*</span>y<span class="token operator">*</span>z<span class="token punctuation">)</span>         diff<span class="token punctuation">(</span>expr<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> z<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token number">3</span>  <span class="token number">2</span> ⎛ <span class="token number">3</span>  <span class="token number">3</span>  <span class="token number">3</span>       <span class="token number">2</span>  <span class="token number">2</span>  <span class="token number">2</span>                ⎞  x⋅y⋅zx ⋅y ⋅⎝x ⋅y ⋅z  <span class="token operator">+</span> <span class="token number">14</span>⋅x ⋅y ⋅z  <span class="token operator">+</span> <span class="token number">52</span>⋅x⋅y⋅z <span class="token operator">+</span> <span class="token number">48</span>⎠⋅ℯ<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="积分intergrate"><a href="#积分intergrate" class="headerlink" title="积分intergrate"></a>积分<code>intergrate</code></h3><p><code>intergrate(integration_variable, lower_limit, upper_limit)</code></p><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> integrate<span class="token punctuation">(</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">-</span>cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span>In<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> integrate<span class="token punctuation">(</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> oo<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token comment" spellcheck="true"># 多重积分</span>In<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> integrate<span class="token punctuation">(</span>exp<span class="token punctuation">(</span><span class="token operator">-</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>y<span class="token operator">**</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span><span class="token operator">-</span>oo<span class="token punctuation">,</span>oo<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>y<span class="token punctuation">,</span> <span class="token operator">-</span>oo<span class="token punctuation">,</span> oo<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">:</span> π<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="极限limit"><a href="#极限limit" class="headerlink" title="极限limit"></a>极限<code>limit</code></h3><p><code>limit(f(x), x, x0)</code></p><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> limit<span class="token punctuation">(</span>sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token operator">/</span>x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token comment" spellcheck="true"># 单侧极限</span>In<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> limit<span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span>x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'+'</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span> ∞<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="等式Eq"><a href="#等式Eq" class="headerlink" title="等式Eq"></a>等式<code>Eq</code></h3><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> Eq<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">:</span> x <span class="token operator">=</span> y<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="3-方程"><a href="#3-方程" class="headerlink" title="3. 方程"></a>3. 方程</h2><h3 id="代数方程solveset"><a href="#代数方程solveset" class="headerlink" title="代数方程solveset"></a>代数方程<code>solveset</code></h3><p><code>solveset(f, symbol=None, domain=S.Complexes)</code></p><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> solveset<span class="token punctuation">(</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span>x<span class="token punctuation">,</span> x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;0, 1&amp;#125;</span>In<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> solveset<span class="token punctuation">(</span>exp<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">:</span> ∅<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="线性方程组linsolve"><a href="#线性方程组linsolve" class="headerlink" title="线性方程组linsolve"></a>线性方程组<code>linsolve</code></h3><p><code>linsolve(system, *symbols)</code></p><pre class="line-numbers language-python"><code class="language-python">In<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> linsolve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">+</span>y<span class="token operator">+</span>z<span class="token number">-1</span><span class="token punctuation">,</span>x<span class="token operator">+</span>y<span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span>z<span class="token number">-3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(-y - 1, y, 2)&amp;#125;</span>In<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span>linsolve<span class="token punctuation">(</span>Matrix<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(-y - 1, y, 2)&amp;#125;</span>In<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> M <span class="token operator">=</span> Matrix<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        system <span class="token operator">=</span> A<span class="token punctuation">,</span> b <span class="token operator">=</span> M<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> M<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        linsolve<span class="token punctuation">(</span>system<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(-y - 1, y, 2)&amp;#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="非线性方程组nonlinsolve"><a href="#非线性方程组nonlinsolve" class="headerlink" title="非线性方程组nonlinsolve"></a>非线性方程组<code>nonlinsolve</code></h3><p><code>nonlinsolve(system, *symbols)</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 仅有实数解</span>In<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> nonlinsolve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">*</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> x <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(2, 1/2)&amp;#125;</span><span class="token comment" spellcheck="true"># 仅有复数解</span>In<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> nonlinsolve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> y<span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span>y<span class="token punctuation">]</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(-ⅈ, -ⅈ), (-ⅈ, ⅈ), (ⅈ, -ⅈ), (ⅈ, ⅈ)&amp;#125;</span><span class="token comment" spellcheck="true"># 同时存在实数解和复数解</span>In<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> nonlinsolve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">*</span>y<span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> x<span class="token operator">*</span>y<span class="token number">-2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(-2, -1), (2, 1), (-√2⋅ⅈ, √2⋅ⅈ), (√2⋅ⅈ, -√2⋅ⅈ)&amp;#125;</span><span class="token comment" spellcheck="true"># 无数值解</span>In<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> nonlinsolve<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token operator">*</span>y<span class="token punctuation">,</span> x<span class="token operator">*</span>y<span class="token operator">-</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;(0, y)&amp;#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>解的顺序与给定符号的顺序相对应.</p><h3 id="微分方程dsolve"><a href="#微分方程dsolve" class="headerlink" title="微分方程dsolve"></a>微分方程<code>dsolve</code></h3><p><code>dsolve(eq, func=None, hint="default", simplify=True, ics= None, xi=None, eta=None, x0=0, n=6, **kwargs)</code></p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 首先需要创建新的未定义函数</span>In<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f<span class="token punctuation">,</span> g <span class="token operator">=</span> symbols<span class="token punctuation">(</span><span class="token string">'f g'</span><span class="token punctuation">,</span> cls<span class="token operator">=</span>Function<span class="token punctuation">)</span>        f<span class="token punctuation">(</span>x<span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">:</span> f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 定义方程</span>In<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token punctuation">:</span>diffeq <span class="token operator">=</span> Eq<span class="token punctuation">(</span>x<span class="token punctuation">.</span>diff<span class="token punctuation">(</span>x<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token operator">*</span>f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span>diff<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">:</span>          d                f<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span>⋅──<span class="token punctuation">(</span>f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>         dx               In<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span> dsolve<span class="token punctuation">(</span>diffeq<span class="token punctuation">,</span> f<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>Out<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        ⎛      <span class="token operator">-</span>x              <span class="token operator">-</span>x        ⎞          ⎜      ───             ───       ⎟  x       ⎜       <span class="token number">2</span>               <span class="token number">2</span>        ⎟  ─       ⎜     ℯ   ⋅sin<span class="token punctuation">(</span>x<span class="token punctuation">)</span>   <span class="token number">2</span>⋅ℯ   ⋅cos<span class="token punctuation">(</span>x<span class="token punctuation">)</span>⎟  <span class="token number">2</span>f<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=</span> ⎜C₁ <span class="token operator">+</span> ─────────── <span class="token operator">+</span> ─────────────⎟⋅ℯ        ⎝          <span class="token number">5</span>              <span class="token number">5</span>      ⎠ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gunicorn基本使用</title>
      <link href="/2020/04/03/gunicorn-ji-ben-shi-yong/"/>
      <url>/2020/04/03/gunicorn-ji-ben-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="开启Gunicorn任务"><a href="#开启Gunicorn任务" class="headerlink" title="开启Gunicorn任务"></a>开启Gunicorn任务</h1><pre class="line-numbers language-shell"><code class="language-shell">gunicorn --bind unix:/tmp/域名.socket projectname.wsgi:application<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="查找masterpid"><a href="#查找masterpid" class="headerlink" title="查找masterpid"></a>查找masterpid</h1><p>首先获取Gunicorn进程树，获取进程pid</p><pre class="line-numbers language-shell"><code class="language-shell">pstree -ap|grep gunicorn<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402234636.png"></p><p>可以看到，29585为主进程</p><h1 id="重启Gunicorn任务"><a href="#重启Gunicorn任务" class="headerlink" title="重启Gunicorn任务"></a>重启Gunicorn任务</h1><pre class="line-numbers language-shell"><code class="language-shell">kill -HUP pid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="退出Gunicorn任务"><a href="#退出Gunicorn任务" class="headerlink" title="退出Gunicorn任务"></a>退出Gunicorn任务</h1><pre class="line-numbers language-shell"><code class="language-shell">kill -9 pid<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再次查看Gunicorn进程树，可以看到主进程已经停止</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402234859.png"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 脱坑实录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu服务器安装Anaconda</title>
      <link href="/2020/04/03/ubuntu-fu-wu-qi-an-zhuang-anaconda/"/>
      <url>/2020/04/03/ubuntu-fu-wu-qi-an-zhuang-anaconda/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Anaconda 是一个用于科学计算的 Python 发行版，支持 Linux, Mac, Windows, 包含了众多流行的科学计算、数据分析的 Python 包。</p></blockquote><h1 id="Anaconda-下载"><a href="#Anaconda-下载" class="headerlink" title="Anaconda 下载"></a>Anaconda 下载</h1><ul><li><h2 id="Anaconda官网"><a href="#Anaconda官网" class="headerlink" title="Anaconda官网"></a><a href="https://www.anaconda.com/">Anaconda官网</a></h2><p>如果有梯子的话速度会比较快，如果没有梯子的话，速度可能会<strong>很慢</strong>。</p></li><li><h2 id="清华大学开源软件镜像站"><a href="#清华大学开源软件镜像站" class="headerlink" title="清华大学开源软件镜像站"></a><a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/">清华大学开源软件镜像站</a></h2><p>建议使用这种方式下载（<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">下载地址</a>），按时间排序，选择合适的最新版：<code>64位Linux版</code></p><p>可以先下载到本地，通过<code>Xftp</code>传到Ubuntu服务器，也可以直接下载到服务器端。</p></li></ul><h1 id="Anaconda-安装"><a href="#Anaconda-安装" class="headerlink" title="Anaconda 安装"></a>Anaconda 安装</h1><ol><li><p>在终端中进到<code>.sh</code>文件所在文件夹</p></li><li><p>运行<code>.sh</code>文件</p><pre class="line-numbers language-shell"><code class="language-shell">bash Anaconda3-2020.02-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>一路<code>Enter</code>，然后输入<code>yes</code>，接受协议</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/%E6%89%B9%E6%B3%A8%202020-04-02%20230506.png"></p></li><li><p>选择安装路径，<code>Enter</code>选择默认路径，也可以自己更改</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402231106.png"></p><p>选择完成后，开始安装</p></li><li><p>安装完成后，选择使用<code>conda</code></p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402232510.png"></p></li><li><p>安装成功</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402232718.png"></p></li></ol><h1 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h1><ol><li><p>打开配置文件</p><pre class="line-numbers language-shell"><code class="language-shell">vim ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>添加环境路径</p><pre><code>export PATH=/home/XXX/anaconda3/bin:$PATH</code></pre><p>填入自己的安装路径</p></li><li><p>激活环境</p><pre class="line-numbers language-shell"><code class="language-shell">source ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>查看Anaconda和python版本</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200402233509.png"></p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 脱坑实录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置虚拟环境</title>
      <link href="/2020/03/29/linux-pei-zhi-xu-ni-huan-jing/"/>
      <url>/2020/03/29/linux-pei-zhi-xu-ni-huan-jing/</url>
      
        <content type="html"><![CDATA[<h1 id="安装虚拟环境"><a href="#安装虚拟环境" class="headerlink" title="安装虚拟环境"></a>安装虚拟环境</h1><p>输入命令：</p><pre class="line-numbers language-shell"><code class="language-shell">sudo pip install virtualenvsudo pip install virtualenvwrapper<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><strong>virtualenv</strong>是虚拟环境的软件工具，可以在系统中建立多个互不干扰的虚拟环境</li><li><strong>virtualenvwrapper</strong>对<strong>virtualenv</strong>进行封装，更加方便管理虚拟环境</li></ul><h1 id="virtualenv的使用"><a href="#virtualenv的使用" class="headerlink" title="virtualenv的使用"></a>virtualenv的使用</h1><ul><li><p>新建虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">mkdir Myprojectcd Myprojectvirtualenv --python=python3 venvvirtualenv --no-site-packages --python=python3.7 venv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>--python=python3</code>指定python环境</li><li><code>--no-site-packages</code>指定获取独立第三方包的环境</li><li><code>venv</code>为虚拟环境名称</li></ul></li><li><p>激活虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">source venv/bin/activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>退出虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h1 id="配置一致的开发环境"><a href="#配置一致的开发环境" class="headerlink" title="配置一致的开发环境"></a>配置一致的开发环境</h1><ul><li><p>导出当前python环境的包</p><pre class="line-numbers language-shell"><code class="language-shell">pip freeze > requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当前环境所有依赖的包及其版本都会收集到<code>requiements.txt</code>中</p></li><li><p>在新环境中安装项目所需的包</p><pre class="line-numbers language-shell"><code class="language-shell">pip install -r requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h1 id="使用virtualenvwrapper管理虚拟环境"><a href="#使用virtualenvwrapper管理虚拟环境" class="headerlink" title="使用virtualenvwrapper管理虚拟环境"></a>使用virtualenvwrapper管理虚拟环境</h1><h2 id="设置Linux环境变量"><a href="#设置Linux环境变量" class="headerlink" title="设置Linux环境变量"></a>设置Linux环境变量</h2><ul><li><p>将<strong>virtualenvwrapper</strong>添加到当前的环境变量中，先打开<strong>bashrc</strong>文件（针对当前用户）</p><pre class="line-numbers language-shell"><code class="language-shell">sudo vim ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>写入以下代码</p><pre class="line-numbers language-shell"><code class="language-shell">export WORKON_HOME=~/Envs #设置virtualenv的统一管理目录export VIRTUALENVWRAPPER_VIRTUALENV_ARGS='--no-site-packages'   export VIRTUALENVWRAPPER_PYTHON=/home/admin/anaconda3/bin/python3 #指定python解释器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>执行<strong>virtualenvwrapper</strong>安装脚本</p><pre class="line-numbers language-shell"><code class="language-shell">source /home/admin/anaconda3/bin/virtualenvwrapper.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>激活设置</p><pre class="line-numbers language-shell"><code class="language-shell">source ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><h2 id="virtualenvwrapper的使用"><a href="#virtualenvwrapper的使用" class="headerlink" title="virtualenvwrapper的使用"></a>virtualenvwrapper的使用</h2><p><strong>virtualenvwrapper</strong>能够将所有的虚拟环境目录集中起来，能够对所有的虚拟环境进行统一管理，不需要自己去找对应的虚拟环境目录去激活。</p><ul><li><p>创建虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">mkvirtualenv [-a project_path] [-i package] [-r requirements_file] [virtualenv options] ENVNAMEmkvirtualenv dataadmin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>激活虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">worken dataadmin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>退出当前虚拟环境</p><pre class="line-numbers language-shell"><code class="language-shell">deactivate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>也可以直接切换到另外的环境</p><pre class="line-numbers language-shell"><code class="language-shell">worken anothervenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>删除虚拟环境（需要先退出）</p><pre class="line-numbers language-shell"><code class="language-shell">rmvirtualenv dataadmin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>所有虚拟环境列表</p><pre class="line-numbers language-shell"><code class="language-shell">lsvirtualenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>导航到当前环境的目录</p><pre class="line-numbers language-shell"><code class="language-shell">cdvirtualenv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>导航到当前环境的<strong>site-packages</strong>目录</p><pre class="line-numbers language-shell"><code class="language-shell">cdsitepackages<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>site-packages</strong>列表</p><pre class="line-numbers language-shell"><code class="language-shell">lssitepackages<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>更多操作见<a href="https://virtualenvwrapper.readthedocs.io/en/latest/command_ref.html">官网</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 脱坑实录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pycharm远程调试</title>
      <link href="/2020/03/28/pycharm-yuan-cheng-diao-shi/"/>
      <url>/2020/03/28/pycharm-yuan-cheng-diao-shi/</url>
      
        <content type="html"><![CDATA[<blockquote><p>IDE：PyCharm 2019.3.3 (Professional Edition)<br>ECS：腾讯云 Ubuntu 18.04.4 LTS</p></blockquote><p>利用pycharm进行远程调试，主要有两种模式：</p><ul><li>利用云服务器端的环境调试本地代码，实现本地开发，Linux云端调试</li><li>在本地调试云端代码</li></ul><p>两种模式共同点都需要在本地的pycharm连接上云服务器的环境，首先需要先配置好服务器端的环境。</p><h2 id="一-配置远程连接"><a href="#一-配置远程连接" class="headerlink" title="一. 配置远程连接"></a>一. 配置远程连接</h2><h4 id="1-进入Pycharm菜单栏，如下图依次点击Tools-gt-Deployment-gt-Configuration…"><a href="#1-进入Pycharm菜单栏，如下图依次点击Tools-gt-Deployment-gt-Configuration…" class="headerlink" title="1. 进入Pycharm菜单栏，如下图依次点击Tools->Deployment->Configuration…"></a>1. 进入Pycharm菜单栏，如下图依次点击Tools-&gt;Deployment-&gt;Configuration…</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328204451.png" alt="菜单栏"></p><h4 id="2-右侧点击-添加SFTP"><a href="#2-右侧点击-添加SFTP" class="headerlink" title="2. 右侧点击+添加SFTP"></a>2. 右侧点击+添加SFTP</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328213703.png"></p><h4 id="3-设置Name（自己设置）"><a href="#3-设置Name（自己设置）" class="headerlink" title="3. 设置Name（自己设置）"></a>3. 设置Name（自己设置）</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328213919.png"></p><h4 id="4-填写连接配置"><a href="#4-填写连接配置" class="headerlink" title="4. 填写连接配置"></a>4. 填写连接配置</h4><ul><li><strong>Host（外网IP）</strong></li><li><strong>端口</strong></li><li><strong>用户名</strong></li><li><strong>密码</strong></li></ul><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/1.png" style="zoom:80%;"><p>填好之后可以<strong>测试连接</strong></p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/2.png"></p><p>之后点击<strong>Autodetect</strong>确定根目录</p><h4 id="5-点击OK结束"><a href="#5-点击OK结束" class="headerlink" title="5. 点击OK结束"></a>5. 点击OK结束</h4><h2 id="二-配置远程解释器"><a href="#二-配置远程解释器" class="headerlink" title="二. 配置远程解释器"></a>二. 配置远程解释器</h2><h4 id="1-进入Pycharm菜单栏，如下图依次点击File-gt-Settings…"><a href="#1-进入Pycharm菜单栏，如下图依次点击File-gt-Settings…" class="headerlink" title="1. 进入Pycharm菜单栏，如下图依次点击File->Settings…"></a>1. 进入Pycharm菜单栏，如下图依次点击File-&gt;Settings…</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328223125.png"></p><h4 id="2-选择Project-gt-Project-Interpreter"><a href="#2-选择Project-gt-Project-Interpreter" class="headerlink" title="2. 选择Project->Project Interpreter"></a>2. 选择Project-&gt;Project Interpreter</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328223329.png"></p><h4 id="3-点击添加解释器"><a href="#3-点击添加解释器" class="headerlink" title="3. 点击添加解释器"></a>3. 点击添加解释器</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328223536.png"></p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328223554.png"></p><h4 id="4-选择SSH-Interpreter-gt-Existing-server-configuration-gt-刚刚新建的Deployment"><a href="#4-选择SSH-Interpreter-gt-Existing-server-configuration-gt-刚刚新建的Deployment" class="headerlink" title="4. 选择SSH Interpreter->Existing server configuration->刚刚新建的Deployment"></a>4. 选择SSH Interpreter-&gt;Existing server configuration-&gt;刚刚新建的Deployment</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/4.png"></p><h4 id="5-选择Move-gt-Next"><a href="#5-选择Move-gt-Next" class="headerlink" title="5. 选择Move ->Next"></a>5. 选择Move -&gt;Next</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331105544.png"></p><h4 id="6-设置远端解释器"><a href="#6-设置远端解释器" class="headerlink" title="6. 设置远端解释器"></a>6. 设置远端解释器</h4><p>我在这里设置为虚拟环境中的解释器，是否需要<strong>sudo</strong>权限根据自己的实际需要</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/5.png"></p><p>可以看到pycharm在<code>tmp</code>文件夹下新建了<code>pycharm_project_xxx</code>文件夹用于放置本地的同步项目代码</p><p>点击<strong>Finish</strong>结束配置</p><h4 id="7-成功后可以看到环境中的安装的依赖包"><a href="#7-成功后可以看到环境中的安装的依赖包" class="headerlink" title="7. 成功后可以看到环境中的安装的依赖包"></a>7. 成功后可以看到环境中的安装的依赖包</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328224945.png"></p><p>点击<strong>Apply</strong>完成配置</p><h4 id="8-检查Mappings"><a href="#8-检查Mappings" class="headerlink" title="8. 检查Mappings"></a>8. 检查Mappings</h4><ul><li><strong>Tools-&gt;Deployment-&gt;Configuration…</strong></li><li><strong>查看之前Deployment的Mappings下的Deployment path</strong></li></ul><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331111651.png"></p><ul><li><strong>如果没有自动定位可以手动设置</strong></li></ul><h2 id="三-远程调试本地代码"><a href="#三-远程调试本地代码" class="headerlink" title="三.远程调试本地代码"></a>三.远程调试本地代码</h2><blockquote><p>以<strong>Django</strong>项目为例</p></blockquote><h4 id="1-设置ALLOWED-HOSTS"><a href="#1-设置ALLOWED-HOSTS" class="headerlink" title="1. 设置ALLOWED_HOSTS"></a>1. 设置ALLOWED_HOSTS</h4><p>允许所有的host访问</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># DataAdmin/settings.py</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>ALLOWED_HOSTS <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"*"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-自动同步代码"><a href="#2-自动同步代码" class="headerlink" title="2. 自动同步代码"></a>2. 自动同步代码</h4><p>实际的运行过程是：pycharm将本地代码<strong>自动同步</strong>到服务器上对应的的<code>tmp/pycharm_projectXXX</code>文件夹中，实际运行时也是运行的服务器端的代码。</p><ul><li><strong>可以通过File Transfer查看同步情况</strong></li></ul><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331112257.png"></p><ul><li><strong>可以通过Tools-&gt;Deployment-&gt;Browse Remote Host查看服务器端目录结构</strong></li></ul><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331112330.png"></p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331112502.png"></p><h4 id="3-调试运行项目"><a href="#3-调试运行项目" class="headerlink" title="3. 调试运行项目"></a>3. 调试运行项目</h4><ul><li><strong>Run manage.py-&gt;Edit  Configurations…</strong></li></ul><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200331110847.png"></p><ul><li><strong>检查Script path是否对应自己的项目地址</strong></li><li><strong>添加Parameters：<code>runserver 0.0.0.0:8000</code></strong></li><li><strong>Apply-&gt;OK</strong></li><li><strong>Run</strong></li></ul><p>打开<strong>IP:8000</strong>，可以看到自己的网页</p><h2 id="四-远程调试云端代码"><a href="#四-远程调试云端代码" class="headerlink" title="四. 远程调试云端代码"></a>四. 远程调试云端代码</h2><h4 id="1-连接到服务器Tools-gt-Start-SSH-session…"><a href="#1-连接到服务器Tools-gt-Start-SSH-session…" class="headerlink" title="1. 连接到服务器Tools->Start SSH session…"></a>1. 连接到服务器Tools-&gt;Start SSH session…</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328231327.png"></p><h4 id="2-选择对应的HOST"><a href="#2-选择对应的HOST" class="headerlink" title="2.选择对应的HOST"></a>2.选择对应的HOST</h4><p>连接成功后，会有终端显示</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/7.png"></p><h4 id="3-显示服务器目录结构Tools-gt-Deployment-gt-Browse-Remote-Host"><a href="#3-显示服务器目录结构Tools-gt-Deployment-gt-Browse-Remote-Host" class="headerlink" title="3. 显示服务器目录结构Tools->Deployment->Browse Remote Host"></a>3. 显示服务器目录结构Tools-&gt;Deployment-&gt;Browse Remote Host</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328231901.png"></p><p>选择后会显示出服务器目录结构，选中项目文件能够打开编辑</p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/9.png"></p><h4 id="4-编辑完成后更新版本"><a href="#4-编辑完成后更新版本" class="headerlink" title="4. 编辑完成后更新版本"></a>4. 编辑完成后更新版本</h4><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328232528.png"></p><p>可以设置自动上传更新<strong>Tools-&gt;Deployment-&gt;Automatic Upload</strong></p><p><img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200328232726.png"></p><h4 id="5-在终端调试运行"><a href="#5-在终端调试运行" class="headerlink" title="5. 在终端调试运行"></a>5. 在终端调试运行</h4><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 脱坑实录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用Channels实现WebSocket协议</title>
      <link href="/2020/03/08/li-yong-channels-shi-xian-websocket-xie-yi/"/>
      <url>/2020/03/08/li-yong-channels-shi-xian-websocket-xie-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP协议与WebSocket协议"><a href="#HTTP协议与WebSocket协议" class="headerlink" title="HTTP协议与WebSocket协议"></a>HTTP协议与WebSocket协议</h1><h2 id="HTTP协议简介"><a href="#HTTP协议简介" class="headerlink" title="HTTP协议简介"></a>HTTP协议简介</h2><p>​    HTTP协议指超文本传输协议（<strong>H</strong>yper<strong>T</strong>ext <strong>T</strong>ransfer <strong>P</strong>rotocol），是用于从万维网服务器传输超文本到本地浏览器的传送协议，是基于TCP/IP协议之上的应用层协议。</p><h3 id="主要特点"><a href="#主要特点" class="headerlink" title="主要特点"></a>主要特点</h3><ol><li><strong>简单快速</strong>：客户向服务器请求服务时，只需传送请求方法和路径，通信速度很快。</li><li><strong>灵活</strong>：HTTP允许传输任意类型的数据对象。</li><li><strong>无连接</strong>：限制每次连接只处理<strong>一个</strong>请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li><li><strong>无状态</strong>：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</li><li><strong>支持客户端/服务器模型</strong></li></ol><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>HTTP是基于客户/服务器模式，且面向连接的。典型的HTTP事务处理有如下的过程：</p><ol><li>客户与服务器建立连接；</li><li>客户向服务器提出请求；</li><li>服务器接受请求，并根据请求返回相应的文件作为应答；</li><li>客户与服务器关闭连接。</li></ol><h2 id="WebSocket协议简介"><a href="#WebSocket协议简介" class="headerlink" title="WebSocket协议简介"></a>WebSocket协议简介</h2><p>​    现在，很多网站为了实现推送技术，所用的技术都是 Ajax 轮询。轮询是在特定的的时间间隔（如每1秒），由浏览器对服务器发出HTTP请求，然后由服务器返回最新的数据给客户端的浏览器。这种传统的模式带来很明显的缺点，即浏览器需要不断的向服务器发出请求，然而HTTP请求可能包含较长的头部，其中真正有效的数据可能只是很小的一部分，显然这样会浪费很多的带宽等资源。</p><p>​    HTML5 定义的 WebSocket 协议，能更好的节省服务器资源和带宽，并且能够更实时地进行通讯。    </p><p>​    <strong>WebSocket</strong>是一种在单个TCP连接上进行全双工通信的协议。WebSocket使得客户端和服务器之间的数据交换变得更加简单，<strong>允许服务端主动向客户端推送数据</strong>。在WebSocket API中，浏览器和服务器只需要完成一次握手，两者之间就直接可以创建<strong>持久性的连接</strong>，并进行<strong>双向数据传输</strong>。</p><h1 id="Django-Channels实现WebSocket实时通讯"><a href="#Django-Channels实现WebSocket实时通讯" class="headerlink" title="Django Channels实现WebSocket实时通讯"></a>Django Channels实现WebSocket实时通讯</h1><blockquote><p><a href="https://channels.readthedocs.io/en/latest/">官方文档</a></p></blockquote><p>​    <strong>Channels</strong>是一个采用Django并将其功能拓展到HTTP以外的项目，以处理WebSocket协议。它基于称为<a href="http://asgi.readthedocs.io/">ASGI</a>的Python规范构建。</p><p>​    接下来基于官方Tutorial1-2简单介绍Channels的使用。</p><p>​    首先需要安装Django和Channels</p><pre class="line-numbers language-powershell"><code class="language-powershell">pip install djangopip install channels<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​    创建一个Django项目，并进入项目根目录：</p><pre class="line-numbers language-powershell"><code class="language-powershell">django<span class="token operator">-</span>admin startproject mysitecd mysite<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​    接下来创建Channels的根路由<code>routing.py</code>，channels的路由配置与Django URLconf相似，它告诉Channels当Channels服务器接收到HTTP请求时要运行什么代码。</p><p>​    首先从一个空的路由配置开始，创建文件<code>mysite/routing.py</code>，包含以下代码：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/routing.py</span><span class="token keyword">from</span> channels<span class="token punctuation">.</span>routing <span class="token keyword">import</span> ProtocolTypeRouterapplication <span class="token operator">=</span> ProtocolTypeRouter<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token comment" spellcheck="true"># (http->django views is added by default)</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    然后将Channels库在应用列表中进行注册：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/settings.py</span>INSTALLED_APPS <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'django.contrib.admin'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.auth'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.contenttypes'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.sessions'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.messages'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.staticfiles'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 新添加</span>    <span class="token string">'channels'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    继续编辑<code>mtsite/settings.py</code>将Channels指向根路由配置，添加以下代码：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/settings.py</span><span class="token comment" spellcheck="true"># Channels</span>ASGI_APPLICATION <span class="token operator">=</span> <span class="token string">'mysite.routing.application'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​    此时Channels可以控制<code>runserver</code>命令，用Channels开发服务器代替标准的Django开发服务器。</p><p>​    运行Django项目：</p><pre class="line-numbers language-powershell"><code class="language-powershell">py manage<span class="token punctuation">.</span>py runserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    将会看到以下输出：</p><pre class="line-numbers language-powershell"><code class="language-powershell">Performing system checks<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>System check identified no issues <span class="token punctuation">(</span>0 silenced<span class="token punctuation">)</span><span class="token punctuation">.</span>You have 17 unapplied migration<span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span> Your project may not work properly <span class="token keyword">until</span> you apply the migrations <span class="token keyword">for</span> app<span class="token punctuation">(</span>s<span class="token punctuation">)</span>: admin<span class="token punctuation">,</span> auth<span class="token punctuation">,</span> contenttypes<span class="token punctuation">,</span> sessions<span class="token punctuation">.</span>Run <span class="token string">'python manage.py migrate'</span> to apply them<span class="token punctuation">.</span>March 07<span class="token punctuation">,</span> 2020 <span class="token operator">-</span> 22:45:04Django version 3<span class="token punctuation">.</span>0<span class="token punctuation">.</span>2<span class="token punctuation">,</span> <span class="token keyword">using</span> settings <span class="token string">'mysite.settings'</span>Starting ASGI<span class="token operator">/</span>Channels version 2<span class="token punctuation">.</span>4<span class="token punctuation">.</span>0 development server at http:<span class="token operator">/</span><span class="token operator">/</span>127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:8000<span class="token operator">/</span>Quit the server with CTRL<span class="token operator">-</span><span class="token keyword">BREAK</span><span class="token punctuation">.</span>HTTP GET <span class="token operator">/</span> 200 <span class="token punctuation">[</span>0<span class="token punctuation">.</span>04<span class="token punctuation">,</span> 127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:54871<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    可以看到<code>Starting ASGI/Channels development server at http://127.0.0.1:8000/</code>，说明Channels开发服务器已从Django开发服务器接管项目。打开<a href="http://127.0.0.1:8000/">初始界面</a>，你将看到熟悉的小火箭：<img src="https://raw.githubusercontent.com/Thooooor/NoteImg/master/20200307225354.png" style="zoom: 80%;"></p><p>​    关闭服务器，创建app<code>event</code>：</p><pre class="line-numbers language-powershell"><code class="language-powershell">py manage<span class="token punctuation">.</span>py startapp event<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    注册app：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/settings.py</span>INSTALLED_APPS <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'django.contrib.admin'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.auth'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.contenttypes'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.sessions'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.messages'</span><span class="token punctuation">,</span>    <span class="token string">'django.contrib.staticfiles'</span><span class="token punctuation">,</span>    <span class="token string">'channels'</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true"># 新添加</span>    <span class="token string">'event'</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    在<strong>根目录</strong>新建文件夹<code>templates</code>以及<code>templates/event</code>文件夹放置html文件，在<code>mysite/settings.py</code>中添加路径：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/settings.py</span>TEMPLATES <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token string">'BACKEND'</span><span class="token punctuation">:</span> <span class="token string">'django.template.backends.django.DjangoTemplates'</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 修改</span>        <span class="token string">'DIRS'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>BASE_DIR<span class="token punctuation">,</span> <span class="token string">'templates'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'\\'</span><span class="token punctuation">,</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token string">'APP_DIRS'</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>        <span class="token string">'OPTIONS'</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>            <span class="token string">'context_processors'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token string">'django.template.context_processors.debug'</span><span class="token punctuation">,</span>                <span class="token string">'django.template.context_processors.request'</span><span class="token punctuation">,</span>                <span class="token string">'django.contrib.auth.context_processors.auth'</span><span class="token punctuation">,</span>                <span class="token string">'django.contrib.messages.context_processors.messages'</span><span class="token punctuation">,</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    在<code>templates</code>中添加视图文件<code>event/list.html</code>，其中WebSocket请求部分模板如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">Filter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"WebSocket"</span> <span class="token keyword">in</span> window<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//alert("您的浏览器支持WebSocket!");</span>            <span class="token comment" spellcheck="true">// 重定向URL</span>            <span class="token keyword">let</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebSocket</span><span class="token punctuation">(</span><span class="token string">"ws://"</span><span class="token operator">+</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>host <span class="token operator">+</span> <span class="token string">"/ws/event/list/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            ws<span class="token punctuation">.</span>onopen <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                ws<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                    <span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">"测试"</span><span class="token punctuation">,</span>                    <span class="token comment" spellcheck="true">// 需要传输的数据</span>                <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            ws<span class="token punctuation">.</span>onmessage <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>evt<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> received_msg <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>evt<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> feed_back <span class="token operator">=</span> received_msg<span class="token punctuation">[</span><span class="token string">'feedback'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token function">alert</span><span class="token punctuation">(</span>feedback<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">// 处理接受数据</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>            ws<span class="token punctuation">.</span>onclose <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//alert("WebSocket连接已关闭...");</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"你的浏览器不支持WebSocket!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    创建视图功能<code>event/views.py</code>：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># event/views.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>shortcuts <span class="token keyword">import</span> render<span class="token keyword">def</span> <span class="token function">list</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render<span class="token punctuation">(</span>request<span class="token punctuation">,</span> <span class="token string">'event/list.html'</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;&amp;#125;)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    创建路由<code>event/urls.py</code>：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># event/urls.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> viewsurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    path<span class="token punctuation">(</span><span class="token string">'list/'</span><span class="token punctuation">,</span> views<span class="token punctuation">.</span>list<span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">'list'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    将<code>event app</code>的路由添加到项目的根路由中：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/urls.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>conf<span class="token punctuation">.</span>urls <span class="token keyword">import</span> include<span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> adminurlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    path<span class="token punctuation">(</span><span class="token string">'admin/'</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span>    path<span class="token punctuation">(</span><span class="token string">'event/'</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">'event.urls'</span><span class="token punctuation">,</span> namespace<span class="token operator">=</span><span class="token string">'event'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Channels处理请求过程：</p><pre><code>1. Channels接受HTTP请求 2. 查询根URLconf查找**消费者(consumer)** 3. 在**消费者(consumer)**中调用各种功能来处理连接的事件</code></pre><p>创建**消费者(consumer)**文件<code>event/consumers.py</code>：</p><pre class="line-numbers language-powershell"><code class="language-powershell">event<span class="token operator">/</span>    __init__<span class="token punctuation">.</span>py    ……    consumers<span class="token punctuation">.</span>py    ……    urls<span class="token punctuation">.</span>py    views<span class="token punctuation">.</span>py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    代码模板如下：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># event/consumers.py</span><span class="token keyword">from</span> channels<span class="token punctuation">.</span>generic<span class="token punctuation">.</span>websocket <span class="token keyword">import</span> WebsocketConsumer<span class="token keyword">import</span> json<span class="token keyword">class</span> <span class="token class-name">ListDataConsumer</span><span class="token punctuation">(</span>WebsocketConsumer<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">connect</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>accept<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">disconnect</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> close_code<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">def</span> <span class="token function">receive</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text_data<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 字典化接收数据</span>        text_data_json <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>text_data<span class="token punctuation">)</span>        message <span class="token operator">=</span> text_data_json<span class="token punctuation">[</span><span class="token string">'message'</span><span class="token punctuation">]</span>        <span class="token comment" spellcheck="true"># 数据处理</span>        self<span class="token punctuation">.</span>send<span class="token punctuation">(</span>text_data<span class="token operator">=</span>json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>        <span class="token string">'feedback'</span><span class="token punctuation">:</span> <span class="token string">"Accept"</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true"># 返回数据</span>    <span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;))</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    为<code>consumers.py</code>配置路由，新建<code>event/routing.py</code>：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># event/routing.py</span><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> re_path<span class="token keyword">from</span> <span class="token punctuation">.</span> <span class="token keyword">import</span> consumerswebsocket_urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span>    re_path<span class="token punctuation">(</span>r<span class="token string">'ws/event/list/$'</span><span class="token punctuation">,</span> consumers<span class="token punctuation">.</span>ListDataConsumer<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    接下来将根路由指向<code>event/routing.py</code>文件：</p><pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># mysite/routing.py</span><span class="token keyword">from</span> channels<span class="token punctuation">.</span>auth <span class="token keyword">import</span> AuthMiddlewareStack<span class="token keyword">from</span> channels<span class="token punctuation">.</span>routing <span class="token keyword">import</span> ProtocolTypeRouter<span class="token punctuation">,</span> URLRouter<span class="token keyword">import</span> event<span class="token punctuation">.</span>routingapplication <span class="token operator">=</span> ProtocolTypeRouter<span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#123;</span>    <span class="token comment" spellcheck="true"># (http->django views is added by default)</span>    <span class="token string">'websocket'</span><span class="token punctuation">:</span> AuthMiddlewareStack<span class="token punctuation">(</span>        URLRouter<span class="token punctuation">(</span>            event<span class="token punctuation">.</span>routing<span class="token punctuation">.</span>websocket_urlpatterns        <span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token comment" spellcheck="true">#125;)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    此根路由配置指定当与Channels开发服务器建立连接时，<code>ProtocolTypeRouter</code>将首先检查连接的类型。如果它是WebSocket连接（<strong>ws：//**或</strong>wss：//**），则该连接将分配给<code>AuthMiddlewareStack</code>。</p><p>​    在<code>AuthMiddlewareStack</code>将填充的连接的<strong>范围</strong>覆盖到当前认证的用户，然后将连接到<code>URLRouter</code>。该<code>URLRouter</code>会研究基础上，提供连接到路由到特定消费者的HTTP路径，基于<code>url</code>模式。</p><p>​    之后进行数据库模型迁移：</p><pre class="line-numbers language-powershell"><code class="language-powershell">py manage<span class="token punctuation">.</span>py makemigrationspy manage<span class="token punctuation">.</span>py migrate<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​    运行项目：</p><pre class="line-numbers language-powershell"><code class="language-powershell">py manage<span class="token punctuation">.</span>py runserver<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    如果连接建立成功，后台应该有如下显示：</p><pre class="line-numbers language-powershell"><code class="language-powershell">HTTP GET <span class="token operator">/</span>event<span class="token operator">/</span>list<span class="token operator">/</span> 200 <span class="token punctuation">[</span>0<span class="token punctuation">.</span>06<span class="token punctuation">,</span> 127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:58855<span class="token punctuation">]</span>WebSocket HANDSHAKING <span class="token operator">/</span>ws<span class="token operator">/</span>event<span class="token operator">/</span>list<span class="token operator">/</span> <span class="token punctuation">[</span>127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:58906<span class="token punctuation">]</span>WebSocket CONNECT <span class="token operator">/</span>ws<span class="token operator">/</span>event<span class="token operator">/</span>list<span class="token operator">/</span> <span class="token punctuation">[</span>127<span class="token punctuation">.</span>0<span class="token punctuation">.</span>0<span class="token punctuation">.</span>1:58906<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>​    使用Channels的一般流程如上，在配置ASGI之后，Channels的服务器会替代原有的Django服务器处理请求。</p><p>​    只有在需要使用WebSocket协议进行实时通信时需要配置<code>routing.py</code>和<code>consumers.py</code>，由<code>routing.py</code>指向<code>consumers.py</code>处理WebSocket请求，其余仅使用HTTP协议请求的使用方式与之前并<strong>没有任何区别</strong>。</p><p>​    因为只是在一个项目中的某个app中使用了Channels，可以参考该<a href="https://github.com/Thooooor/GovermentDataAdmin">项目代码</a>中的<code>event</code>.</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 技术实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
